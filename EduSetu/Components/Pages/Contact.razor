@page "/contact"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager

<div class="min-h-screen bg-gray-50 pt-16">
    <div class="container mx-auto px-4 py-8">
        <!-- Header -->
        <div class="mb-8">
            <div class="flex items-center gap-3 mb-4">
                <div class="p-3 bg-primary-100 rounded-xl">
                    <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                    </svg>
                </div>
                <div>
                    <h1 class="text-4xl font-bold text-gray-800">Contact Us</h1>
                    <p class="text-gray-600 mt-1">Get in touch with our team for support and inquiries</p>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Contact Form -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <h2 class="text-2xl font-semibold text-gray-800 mb-6">Send us a Message</h2>
                
                <EditForm Model="contactForm" OnValidSubmit="HandleSubmit">
                    <DataAnnotationsValidator />
                    
                    <div class="space-y-4">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">First Name</label>
                                <InputText @bind-Value="contactForm.FirstName" 
                                         class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" />
                                <ValidationMessage For="@(() => contactForm.FirstName)" />
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Last Name</label>
                                <InputText @bind-Value="contactForm.LastName" 
                                         class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" />
                                <ValidationMessage For="@(() => contactForm.LastName)" />
                            </div>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                            <InputText @bind-Value="contactForm.Email" 
                                     class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" />
                            <ValidationMessage For="@(() => contactForm.Email)" />
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Subject</label>
                            <InputSelect @bind-Value="contactForm.Subject" 
                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500">
                                <option value="">Select a subject</option>
                                <option value="general">General Inquiry</option>
                                <option value="technical">Technical Support</option>
                                <option value="content">Content Request</option>
                                <option value="feedback">Feedback</option>
                                <option value="partnership">Partnership</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => contactForm.Subject)" />
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Message</label>
                            <InputTextArea @bind-Value="contactForm.Message" rows="5"
                                         class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" />
                            <ValidationMessage For="@(() => contactForm.Message)" />
                        </div>

                        <button type="submit" 
                                class="w-full bg-primary-600 hover:bg-primary-700 text-white font-medium py-3 px-6 rounded-lg transition-colors">
                            Send Message
                        </button>
                    </div>
                </EditForm>
            </div>

            <!-- Contact Information -->
            <div class="space-y-6">
                <!-- Contact Details -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                    <h2 class="text-2xl font-semibold text-gray-800 mb-6">Get in Touch</h2>
                    
                    <div class="space-y-4">
                        <div class="flex items-start gap-3">
                            <div class="p-2 bg-primary-100 rounded-lg">
                                <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                                </svg>
                            </div>
                            <div>
                                <h3 class="font-medium text-gray-800">Phone</h3>
                                <p class="text-gray-600">+91 98765 43210</p>
                                <p class="text-gray-600">+91 98765 43211</p>
                            </div>
                        </div>

                        <div class="flex items-start gap-3">
                            <div class="p-2 bg-primary-100 rounded-lg">
                                <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                                </svg>
                            </div>
                            <div>
                                <h3 class="font-medium text-gray-800">Email</h3>
                                <p class="text-gray-600">support@edusetu.com</p>
                                <p class="text-gray-600">info@edusetu.com</p>
                            </div>
                        </div>

                        <div class="flex items-start gap-3">
                            <div class="p-2 bg-primary-100 rounded-lg">
                                <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                </svg>
                            </div>
                            <div>
                                <h3 class="font-medium text-gray-800">Address</h3>
                                <p class="text-gray-600">123 Education Street</p>
                                <p class="text-gray-600">New Delhi, Delhi 110001</p>
                                <p class="text-gray-600">India</p>
                            </div>
                        </div>

                        <div class="flex items-start gap-3">
                            <div class="p-2 bg-primary-100 rounded-lg">
                                <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                            <div>
                                <h3 class="font-medium text-gray-800">Business Hours</h3>
                                <p class="text-gray-600">Monday - Friday: 9:00 AM - 6:00 PM</p>
                                <p class="text-gray-600">Saturday: 10:00 AM - 4:00 PM</p>
                                <p class="text-gray-600">Sunday: Closed</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- FAQ Section -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                    <h2 class="text-2xl font-semibold text-gray-800 mb-6">Frequently Asked Questions</h2>
                    
                    <div class="space-y-4">
                        @foreach (var faq in faqs)
                        {
                            <div class="border-b border-gray-200 pb-4 last:border-b-0">
                                <button @onclick="() => ToggleFaq(faq.Id)" 
                                        class="flex items-center justify-between w-full text-left">
                                    <h3 class="font-medium text-gray-800">@faq.Question</h3>
                                    <svg class="w-5 h-5 text-gray-500 transition-transform @(expandedFaqs.Contains(faq.Id) ? "rotate-180" : "")" 
                                         fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                    </svg>
                                </button>
                                @if (expandedFaqs.Contains(faq.Id))
                                {
                                    <p class="text-gray-600 mt-2">@faq.Answer</p>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ContactForm contactForm = new();
    private List<string> expandedFaqs = new();

    private List<FAQ> faqs = new()
    {
        new FAQ { Id = "1", Question = "How do I access premium content?", Answer = "Premium content is available to registered users with a subscription. You can upgrade your account from your profile settings." },
        new FAQ { Id = "2", Question = "Can I download study materials?", Answer = "Yes, most study materials can be downloaded for offline use. Look for the download button on each resource." },
        new FAQ { Id = "3", Question = "How do I report incorrect content?", Answer = "You can report incorrect content by clicking the 'Report' button on any resource or by contacting our support team." },
        new FAQ { Id = "4", Question = "Is the content verified by experts?", Answer = "Yes, all content is reviewed and verified by subject matter experts before being published on our platform." },
        new FAQ { Id = "5", Question = "Can I contribute content?", Answer = "We welcome contributions from qualified educators. Please contact us with your credentials and proposed content." }
    };

    private void HandleSubmit()
    {
        // In a real application, this would send the form data to a server
        Console.WriteLine($"Form submitted: {contactForm.FirstName} {contactForm.LastName} - {contactForm.Email}");
        
        // Reset form
        contactForm = new ContactForm();
        
        // Show success message (you could add a toast notification here)
    }

    private void ToggleFaq(string faqId)
    {
        if (expandedFaqs.Contains(faqId))
        {
            expandedFaqs.Remove(faqId);
        }
        else
        {
            expandedFaqs.Add(faqId);
        }
    }

    public class ContactForm
    {
        [Required(ErrorMessage = "First name is required")]
        [StringLength(50, ErrorMessage = "First name cannot exceed 50 characters")]
        public string FirstName { get; set; } = "";

        [Required(ErrorMessage = "Last name is required")]
        [StringLength(50, ErrorMessage = "Last name cannot exceed 50 characters")]
        public string LastName { get; set; } = "";

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Please enter a valid email address")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "Please select a subject")]
        public string Subject { get; set; } = "";

        [Required(ErrorMessage = "Message is required")]
        [StringLength(1000, ErrorMessage = "Message cannot exceed 1000 characters")]
        public string Message { get; set; } = "";
    }

    public class FAQ
    {
        public string Id { get; set; } = "";
        public string Question { get; set; } = "";
        public string Answer { get; set; } = "";
    }
} 