@page "/videos"
@using System.ComponentModel.DataAnnotations
@using EduSetu.Components.Shared
@inject NavigationManager NavigationManager

<div class="min-h-screen bg-gray-50 dark:bg-gray-900 pt-16">
    <div class="container mx-auto px-4 py-8">
        <div class="mb-8">
            <div class="flex items-center gap-3 mb-4">
                <div class="p-3 bg-primary-100 dark:bg-primary-900 rounded-xl">
                    <svg class="w-8 h-8 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                    </svg>
                </div>
                <div>
                    <h1 class="text-4xl font-bold text-gray-800 dark:text-white">Educational Videos</h1>
                    <p class="text-gray-600 dark:text-gray-400 mt-1">Comprehensive video lectures and tutorials organized by subject</p>
                </div>
            </div>
        </div>

        <div class="flex flex-col lg:flex-row gap-8">
            <VideosSidebar SelectedCategory="selectedCategory" 
                          OnCategorySelect="@(cat => SelectCategory(cat))"
                          Filters="filters"
                          FilterOptions="filterOptions"
                          OnFilterChange="@(args => HandleFilterChange(args.Item1, args.Item2))"
                          OnClearFilters="@(() => ClearFilters())" />

            <div class="flex-1">
                <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-6">
                    <div class="relative mb-4">
                        <input type="text" placeholder="Search videos by title, description, instructor, or tags..."
                               @bind-value="searchQuery" @bind-value:event="oninput"
                               class="w-full pl-12 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400" />
                        <svg class="absolute left-4 top-3.5 text-gray-400 dark:text-gray-500 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </div>

                    <div class="flex flex-col sm:flex-row sm:items-center justify-between gap-4">
                        <div class="flex items-center gap-4">
                            <div class="flex items-center gap-2 bg-gray-100 dark:bg-gray-700 rounded-lg p-1">
                                <button @onclick="@(() => SetViewMode("grid"))"
                                        class="@($"p-2 rounded-md transition-colors {(viewMode == "grid" ? "bg-white dark:bg-gray-800 text-gray-800 dark:text-white shadow-sm" : "text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-white")}")">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
                                    </svg>
                                </button>
                                <button @onclick="@(() => SetViewMode("list"))"
                                        class="@($"p-2 rounded-md transition-colors {(viewMode == "list" ? "bg-white dark:bg-gray-800 text-gray-800 dark:text-white shadow-sm" : "text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-white")}")">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
                                    </svg>
                                </button>
                            </div>
                        </div>

                        <div class="flex items-center gap-4">
                            <div class="flex items-center gap-2">
                                <label class="text-sm font-medium text-gray-700 dark:text-gray-300">Sort by:</label>
                                <select @bind="sortBy" @bind:after="() => StateHasChanged()"
                                        class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
                                    <option value="newest">Newest</option>
                                    <option value="popular">Most Popular</option>
                                    <option value="rating">Highest Rated</option>
                                    <option value="duration">Duration</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mb-6">
                    <p class="text-gray-600 dark:text-gray-400">
                        Showing @(startIndex + 1)-@Math.Min(endIndex, filteredVideos.Count) of @filteredVideos.Count videos
                        @if (!string.IsNullOrEmpty(selectedCategory))
                        {
                            <span class="ml-2 px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-300 text-sm rounded">
                                @(char.ToUpper(selectedCategory[0]) + selectedCategory.Substring(1)) Wise
                            </span>
                        }
                    </p>
                </div>

                @if (currentVideos.Any())
                {
                    @if (viewMode == "grid")
                    {
                        <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 mb-8">
                            @foreach (var video in currentVideos)
                            {
                                <VideoCard Video="video" OnView="@(() => HandleViewVideo(video))" OnDownload="@(() => HandleDownloadVideo(video))" />
                            }
                        </div>
                    }
                    else
                    {
                        <div class="space-y-4 mb-8">
                            @foreach (var video in currentVideos)
                            {
                                <VideosListView Video="video" OnView="@(() => HandleViewVideo(video))" OnDownload="@(() => HandleDownloadVideo(video))" />
                            }
                        </div>
                    }

                    @if (totalPages > 1)
                    {
                        <div class="flex items-center justify-center gap-2 mt-8">
                            <button @onclick="() => HandlePageChange(currentPage - 1)"
                                    disabled="@(currentPage == 1)"
                                    class="flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300 disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                                </svg>
                                Previous
                            </button>

                            <div class="flex items-center gap-1">
                                @foreach (var page in GetPageNumbers())
                                {
                                    @if (page == "...")
                                    {
                                        <span class="px-3 py-2 text-gray-500 dark:text-gray-400">...</span>
                                    }
                                    else
                                    {
                                        <button @onclick="() => HandlePageChange((int)page)"
                                                class="@($"px-3 py-2 rounded-lg transition-colors {(currentPage == (int)page ? "bg-primary-600 dark:bg-primary-700 text-white" : "hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300")}")">
                                            @((int)page)
                                        </button>
                                    }
                                }
                            </div>

                            <button @onclick="() => HandlePageChange(currentPage + 1)"
                                    disabled="@(currentPage == totalPages)"
                                    class="flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300 disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
                                Next
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                </svg>
                            </button>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-12">
                        <div class="text-gray-400 dark:text-gray-500 mb-4">
                            <svg class="w-12 h-12 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                            </svg>
                        </div>
                        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No videos found</h3>
                        <p class="text-gray-600 dark:text-gray-400 mb-4">
                            Try adjusting your search terms or filters to find what you"re looking for.
                        </p>
                        @if (filters.Any(f => !string.IsNullOrEmpty(f.Value)))
                        {
                            <button @onclick="ClearFilters"
                                    class="text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium">
                                Clear all filters
                            </button>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>