@page "/profile"
@inherits BaseComponent
@using System.ComponentModel.DataAnnotations
@using Blazored.FluentValidation
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<div class="min-h-screen bg-gray-50 dark:bg-gray-950 pt-16">
    <div class="bg-white dark:bg-gray-900 shadow-sm border-b dark:border-gray-800">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="py-6 sm:py-8">
                <EditForm Model="@record" OnValidSubmit="@HandleSubmitAsync">
                    <div class="flex flex-col sm:flex-row items-center sm:space-x-6">
                        <div class="relative flex-shrink-0">
                            <div class="w-20 h-20 sm:w-24 sm:h-24 bg-gradient-to-br from-primary-400 to-primary-600 rounded-full flex items-center justify-center text-white text-xl sm:text-2xl font-bold overflow-hidden">
                                @if (!string.IsNullOrEmpty(record.ImageBytes))
                                {
                                    <img src="@record.ImageBytes" alt="Profile" class="w-full h-full object-cover" />
                                }
                                else if (IsProfileImageExists())
                                {
                                    <img src="@record?.ProfilePictureUrl" alt="Profile" class="w-full h-full object-cover" />
                                }
                                else
                                {
                                    <span>@GetUserInitials()</span>
                                }
                            </div>
                            @if (isEditingProfile)
                            {
                                <label for="profilePictureInput" class="absolute -bottom-1 -right-1 sm:-bottom-2 sm:-right-2 bg-white dark:bg-gray-800 rounded-full p-2 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-md transition-shadow cursor-pointer">
                                    <svg class="w-4 h-4 text-gray-600 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    </svg>
                                </label>

                                @if (!string.IsNullOrEmpty(record.ImageBytes) || IsProfileImageExists())
                                {
                                    <button type="button" @onclick="ClearProfilePicture" class="absolute -top-1 -right-1 sm:-top-2 sm:-right-2 bg-red-500 hover:bg-red-600 rounded-full p-1.5 shadow-lg border border-red-400 hover:border-red-500 transition-all duration-200">
                                        <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                        </svg>
                                    </button>
                                }

                                <InputFile OnChange="HandleFileSelected"
                                           accept="image/*"
                                           maxAllowedSize="2097152"
                                           class="hidden"
                                           style="display:none;"
                                           id="profilePictureInput" />

                            }
                        </div>

                        <div class="flex-1 text-center sm:text-left mt-4 sm:mt-0">
                            @if (isEditingProfile)
                            {
                                <div class="space-y-2">
                                    <div class="flex flex-col sm:flex-row gap-2 sm:gap-4">
                                        <input type="text" @bind="record.FirstName"
                                               class="w-full text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-50 bg-transparent border-0 outline-none border-b-2 border-gray-400 border-gray-400 dark:border-gray-500 focus:border-primary-500 focus:border-b-2 transition-all duration-200 px-1 py-0"
                                               placeholder="First Name" />
                                        <input type="text" @bind="record.LastName"
                                               class="w-[full] text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-50 bg-transparent border-0 outline-none border-b-2 border-gray-400 border-gray-400 dark:border-gray-500 focus:border-primary-500 focus:border-gray-400 transition-all duration-200 px-1 py-0"
                                               placeholder="Last Name" />
                                    </div>
                                    <input type="email" @bind="record.Email"
                                           class="w-full text-gray-600 dark:text-gray-400 bg-transparent border-0 border-b-2 border-gray-400 dark:border-gray-500 focus:border-primary-500 hover:border-gray-600 dark:hover:border-gray-400 transition-all duration-200 px-1 py-0.5 outline-none"
                                           placeholder="Email address" />
                                </div>
                            }
                            else
                            {
                                <h1 class="text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-50">@(record?.FirstName ?? "User") @(record?.LastName ?? "")</h1>
                                <p class="text-gray-600 dark:text-gray-400 mt-1">@(record?.Email ?? "user@example.com")</p>
                            }
                            <div class="flex flex-col sm:flex-row items-center justify-center sm:justify-start space-y-2 sm:space-y-0 sm:space-x-4 mt-[2px]">
                                <span class="inline-flex items-center rounded-full text-sm font-medium text-green-800 dark:text-green-200">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                    @record.RowStatus
                                </span>
                                <span class="text-sm text-gray-500 dark:text-gray-400 hidden sm:inline">Joined @(record?.CreatedDate.ToString("MMMM yyyy") ?? "Recently")</span>
                            </div>
                        </div>

                        <div class="mt-6 sm:mt-0 flex flex-col sm:flex-row items-center space-y-3 sm:space-y-0 sm:space-x-3">
                            @if (isEditingProfile)
                            {
                                <button type="submit" 
                                        disabled="@isSaving" 
                                        class="w-full sm:w-auto flex items-center justify-center gap-2 px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors @(isSaving ? "opacity-50 cursor-not-allowed" : "")">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                    </svg>
                                    @if (isSaving)
                                    {
                                        <span>Saving...</span>
                                    }
                                    else
                                    {
                                        <span>Save Changes</span>
                                    }
                                </button>
                                <button type="button" @onclick="CancelEditProfile" class="w-full sm:w-auto flex items-center justify-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-700 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                    </svg>
                                    Cancel
                                </button>
                            }
                            else
                            {
                                <button type="button" @onclick="@(() => EditProfile())" class="w-full sm:w-auto flex items-center justify-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-700 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                    </svg>
                                    Edit Profile
                                </button>
                            }
                            @if (!isEditingProfile)
                            {
                                <button type="button" @onclick="@(() => UploadContent())" class="w-full sm:w-auto flex items-center justify-center gap-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                                </svg>
                                Upload Content
                            </button>
                            }
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <div class="lg:col-span-1 space-y-6">


                <div class="bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-800 p-6">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-50 mb-4">Quick Actions</h3>
                    <div class="space-y-3">

                        <button @onclick="@(() => SetActiveSection("uploads"))" class="w-full flex items-center gap-3 p-3 text-left text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-lg transition-colors @(activeSection == "uploads" ? "bg-gray-50 dark:bg-gray-800" : "")">
                            <svg class="w-5 h-5 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                            </svg>
                            <span>My Uploads</span>
                        </button>
                        <button @onclick="@(() => SetActiveSection("activity"))" class="w-full flex items-center gap-3 p-3 text-left text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-lg transition-colors @(activeSection == "activity" ? "bg-gray-50 dark:bg-gray-800" : "")">
                            <svg class="w-5 h-5 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span>Activity History</span>
                        </button>
                        <div class="relative">
                            <button @onclick="ToggleSettingsDropdown" class="w-full flex items-center gap-3 p-3 text-left text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-lg transition-colors @(showSettingsDropdown ? "bg-gray-50 dark:bg-gray-800" : "")">
                                <svg class="w-5 h-5 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                </svg>
                                <span>Settings</span>
                                @if (showSettingsDropdown)
                                {
                                    <svg class="w-4 h-4 ml-auto text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                    </svg>
                                }
                                else
                                {
                                    <svg class="w-4 h-4 ml-auto text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                    </svg>
                                }
                            </button>

                            @if (showSettingsDropdown)
                            {
                                <div class="relative ml-6 mt-1">
                                    <!-- Vertical connecting line -->
                                    <div class="absolute left-0 top-0 w-px h-full bg-gray-300 dark:bg-gray-600"></div>

                                    <ul class="space-y-1">
                                        <li class="relative">
                                            <!-- Horizontal connecting line -->
                                            <div class="absolute left-0 top-1/2 w-4 h-px bg-gray-300 dark:bg-gray-600 transform -translate-y-1/2"></div>
                                            <button @onclick="ChangePassword" class="w-full flex items-center gap-3 p-2 text-left text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-lg transition-colors ml-6">
                                                <svg class="w-4 h-4 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
                                                </svg>
                                                <span>Change Password</span>
                                            </button>
                                        </li>
                                        <li class="relative">
                                            <!-- Horizontal connecting line -->
                                            <div class="absolute left-0 top-1/2 w-4 h-px bg-gray-300 dark:bg-gray-600 transform -translate-y-1/2"></div>
                                            <button @onclick="DeleteAccount" class="w-full flex items-center gap-3 p-2 text-left text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors ml-6">
                                                <svg class="w-4 h-4 text-red-500 dark:text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                </svg>
                                                <span>Delete Account</span>
                                            </button>
                                        </li>
                                    </ul>
                                </div>
                            }
                        </div>
                        @* <button @onclick="@(() => NavigationManager.NavigateTo("/profile/stats"))" class="w-full flex items-center gap-3 p-3 text-left text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-lg transition-colors">
                            <svg class="w-5 h-5 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                            <span>Detailed Stats</span>
                        </button> *@
                    </div>
                </div>

                <div class="bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-800 p-6">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-50 mb-4">Your Stats</h3>
                    <div class="space-y-4">
                        <div class="flex items-center justify-between">
                            <span class="text-gray-600 dark:text-gray-400">Notes Created</span>
                            <span class="font-semibold text-gray-900 dark:text-gray-50">@stats.NotesCount</span>
                        </div>
                        <div class="flex items-center justify-between">
                            <span class="text-gray-600 dark:text-gray-400">PYQs Uploaded</span>
                            <span class="font-semibold text-gray-900 dark:text-gray-50">@stats.PYQsCount</span>
                        </div>
                        <div class="flex items-center justify-between">
                            <span class="text-gray-600 dark:text-gray-400">Videos Shared</span>
                            <span class="font-semibold text-gray-900 dark:text-gray-50">@stats.VideosCount</span>
                        </div>
                        <div class="flex items-center justify-between">
                            <span class="text-gray-600 dark:text-gray-400">Total Downloads</span>
                            <span class="font-semibold text-gray-900 dark:text-gray-50">@stats.DownloadsCount</span>
                        </div>
                        <div class="flex items-center justify-between">
                            <span class="text-gray-600 dark:text-gray-400">Study Hours</span>
                            <span class="font-semibold text-gray-900 dark:text-gray-50">@stats.StudyHours hrs</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="lg:col-span-2 space-y-6">
                @switch (activeSection)
                {
                    case "change-password":
                        <div class="bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-800 p-6">
                            <div class="flex items-center justify-between mb-6">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-50">Change Password</h3>
                            </div>
                            <div class="space-y-6">
                                <div class="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4">
                                    <div class="flex">
                                        <div class="flex-shrink-0">
                                            <svg class="h-5 w-5 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                            </svg>
                                        </div>
                                        <div class="ml-3">
                                            <h3 class="text-sm font-medium text-yellow-800 dark:text-yellow-200">Security Notice</h3>
                                            <div class="mt-2 text-sm text-yellow-700 dark:text-yellow-300">
                                                <p>For your security, you'll need to verify your current password before changing it.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <EditForm Model="@passwordFormData" OnValidSubmit="@ChangePasswordAsync" class="space-y-6">
                                    <FluentValidationValidator />

                                    <div class="space-y-4">
                                        <!-- Current Password -->
                                        <div>
                                            <label for="current-password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                Current Password
                                            </label>
                                            <div class="relative">
                                                <div class="absolute inset-y-0 left-0 flex items-center pl-3">
                                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                                    </svg>
                                                </div>
                                                <InputText @bind-Value="passwordFormData.CurrentPassword"
                                                           type="@(showCurrentPassword ? "text" : "password")"
                                                           id="current-password"
                                                           class="w-full pl-10 pr-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
                                                           placeholder="••••••••" />
                                                <button type="button" class="absolute right-3 top-3 text-text-secondary hover:text-text-primary" @onclick="@(() => TogglePasswordVisibility("current"))">
                                                    <i class="fas @(showCurrentPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                                </button>
                                            </div>
                                            <ValidationMessage For="@(() => passwordFormData.CurrentPassword)"
                                                               class="mt-1.5 text-sm text-red-500 dark:text-red-400" />
                                        </div>

                                        <!-- New Password -->
                                        <div>
                                            <label for="new-password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                New Password
                                            </label>
                                            <div class="relative">
                                                <div class="absolute inset-y-0 left-0 flex items-center pl-3">
                                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                                    </svg>
                                                </div>
                                                <InputText @bind-Value="passwordFormData.NewPassword"
                                                           @oninput="ValidatePassword"
                                                           type="@(showNewPassword ? "text" : "password")"
                                                           id="new-password"
                                                           class="w-full pl-10 pr-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
                                                           placeholder="••••••••" />
                                                <button type="button" class="absolute right-3 top-3 text-text-secondary hover:text-text-primary" @onclick="@(() => TogglePasswordVisibility("new"))">
                                                    <i class="fas @(showNewPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                                </button>
                                            </div>
                                            <ValidationMessage For="@(() => passwordFormData.NewPassword)"
                                                               class="mt-1.5 text-sm text-red-500 dark:text-red-400" />
                                            @if (isVisibleCheckBox)
                                            {
                                                <!-- Password strength checklist -->
                                                <div class="mt-2 text-xs">
                                                    <div class="flex items-center gap-2">
                                                        <i class="far @(hasMinLength ? "fa-check-square text-brand-cyan-dark" : "fa-square text-gray-400")"></i>
                                                        <span>At least 8 characters</span>
                                                    </div>
                                                    <div class="flex items-center gap-2">
                                                        <i class="far @(hasUppercase ? "fa-check-square text-brand-cyan-dark" : "fa-square text-gray-400")"></i>
                                                        <span>At least 1 uppercase letter</span>
                                                    </div>
                                                    <div class="flex items-center gap-2">
                                                        <i class="far @(hasNumber ? "fa-check-square text-brand-cyan-dark" : "fa-square text-gray-400")"></i>
                                                        <span>At least 1 number</span>
                                                    </div>
                                                    <div class="flex items-center gap-2">
                                                        <i class="far @(hasSpecialChar ? "fa-check-square text-brand-cyan-dark" : "fa-square text-gray-400")"></i>
                                                        <span>At least 1 special character</span>
                                                    </div>
                                                </div>
                                            }
                                        </div>

                                        <!-- Confirm Password -->
                                        <div>
                                            <label for="confirm-password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                Confirm New Password
                                            </label>
                                            <div class="relative">
                                                <div class="absolute inset-y-0 left-0 flex items-center pl-3">
                                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                                    </svg>
                                                </div>
                                                <InputText @bind-Value="passwordFormData.ConfirmPassword"
                                                           type="@(showConfirmPassword ? "text" : "password")"
                                                           id="confirm-password"
                                                           class="w-full pl-10 pr-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
                                                           placeholder="••••••••" />
                                                <button type="button" class="absolute right-3 top-3 text-text-secondary hover:text-text-primary" @onclick="@(() => TogglePasswordVisibility("confirm"))">
                                                    <i class="fas @(showConfirmPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                                </button>
                                            </div>
                                            <ValidationMessage For="@(() => passwordFormData.ConfirmPassword)"
                                                               class="mt-1.5 text-sm text-red-500 dark:text-red-400" />
                                        </div>
                                    </div>

                                    <!-- Action Buttons -->
                                    <div class="flex items-center justify-end gap-3 pt-6">
                                        <button type="button"
                                                @onclick="CloseChangePassword"
                                                class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                                            Cancel
                                        </button>
                                        <button type="submit"
                                                class="px-4 py-2 text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 rounded-lg transition-colors flex items-center gap-2"
                                                disabled="@isChangingPassword">
                                            @if (!isChangingPassword)
                                            {
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002
                                             2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                                </svg>
                                                <span>Update Password</span>
                                            }
                                            else
                                            {
                                                <svg class="w-4 h-4 animate-spin" fill="none" viewBox="0 0 24 24">
                                                    <circle class="opacity-25" cx="12" cy="12" r="10"
                                                            stroke="currentColor" stroke-width="4"></circle>
                                                    <path class="opacity-75" fill="currentColor"
                                                          d="M4 12a8 8 0 018-8v4a4 4 0 00-4
                                             4H4z"></path>
                                                </svg>
                                                <span>Updating...</span>
                                            }
                                        </button>

                                    </div>
                                </EditForm>
                            </div>
                        </div>
                        break;

                    case "delete-account":
                        <div class="bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-red-200 dark:border-red-800 p-6">
                            <div class="flex items-center justify-between mb-6">
                                <h3 class="text-lg font-semibold text-red-600 dark:text-red-400">Delete Account</h3>
                            </div>
                            <div class="space-y-6">
                                <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4">
                                    <div class="flex">
                                        <div class="flex-shrink-0">
                                            <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                            </svg>
                                        </div>
                                        <div class="ml-3">
                                            <h3 class="text-sm font-medium text-red-800 dark:text-red-200">Warning: This action cannot be undone</h3>
                                            <div class="mt-2 text-sm text-red-700 dark:text-red-300">
                                                <p>Deleting your account will permanently remove all your data, including:</p>
                                                <ul class="list-disc list-inside mt-2 space-y-1">
                                                    <li>All uploaded notes, videos, and PYQs</li>
                                                    <li>Your profile information and settings</li>
                                                    <li>Download history and statistics</li>
                                                    <li>All associated data and preferences</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <EditForm Model="@deleteAccountModel" OnValidSubmit="@DeleteUserAsync" class="space-y-6">
                                    <FluentValidationValidator />
                                    <div>
                                        <label for="delete-password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Confirm Password
                                        </label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 flex items-center pl-3">
                                                <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                                </svg>
                                            </div>
                                            <InputText @bind-Value="deleteAccountModel.Password"
                                                       type="@(showConfirmPassword ? "text" : "password")"
                                                       id="delete-password"
                                                       class="w-full pl-10 pr-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
                                                       placeholder="Enter your password to confirm"/>
                                            <button type="button" class="absolute right-3 top-3 text-text-secondary hover:text-text-primary" @onclick="@(() => TogglePasswordVisibility("confirm"))">
                                                <i class="fas @(showConfirmPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                            </button>
                                        </div>
                                        <ValidationMessage For="@(() => deleteAccountModel.Password)" class="mt-1.5 text-sm text-red-500" />
                                    </div>

                                    <div>
                                        <label for="delete-confirmation" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Type "DELETE" to confirm
                                        </label>
                                        <InputText @bind-Value="deleteAccountModel.DeleteConfirmation"
                                                  id="delete-confirmation"
                                                  class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
                                                  placeholder="Type DELETE in capital letters"/>
                                        <ValidationMessage For="@(() => deleteAccountModel.DeleteConfirmation)" class="mt-1.5 text-sm text-red-500" />
                                    </div>

                                    <div class="flex items-center space-x-2">
                                        <InputCheckbox @bind-Value="deleteAccountModel.UnderstandDeletion"
                                                      id="delete-understand"
                                                      class="h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300 dark:border-gray-600 rounded"/>
                                        <label for="delete-understand" class="text-sm text-gray-700 dark:text-gray-300">
                                            I understand that this action cannot be undone
                                        </label>
                                    </div>
                                    <ValidationMessage For="@(() => deleteAccountModel.UnderstandDeletion)" class="mt-1.5 text-sm text-red-500" />
                                    
                                    <div class="flex items-center justify-end space-x-3 pt-4">
                                        <button type="button" @onclick="CloseDeleteAccount" class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                                            Cancel
                                        </button>
                                        <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-red-600 hover:bg-red-700 rounded-lg transition-colors">
                                            Delete Account
                                        </button>
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                        break;

                    case "activity":
                        <div class="bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-800 p-6">
                            <div class="flex items-center justify-between mb-6">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-50">Recent Activity</h3>
                                <button @onclick="@(() => NavigationManager.NavigateTo("/profile/history"))" class="text-primary-600 hover:text-primary-700 text-sm font-medium">View All</button>
                            </div>
                            <div class="space-y-4">
                                @foreach (var activity in recentActivities)
                                {
                                    <div class="flex items-start space-x-3">
                                        <div class="flex-shrink-0">
                                            <div class="w-8 h-8 bg-primary-100 dark:bg-primary-900 rounded-full flex items-center justify-center">
                                                <svg class="w-4 h-4 text-primary-600 dark:text-primary-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    @if (activity.Type == "upload")
                                                    {
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                                                    }
                                                    else if (activity.Type == "download")
                                                    {
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                                                    }
                                                    else
                                                    {
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                                    }
                                                </svg>
                                            </div>
                                        </div>
                                        <div class="flex-1 min-w-0">
                                            <p class="text-sm text-gray-900 dark:text-gray-50">@activity.Description</p>
                                            <p class="text-sm text-gray-500 dark:text-gray-400">@activity.TimeAgo</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        break;

                    case "uploads":
                        <div class="bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-800 p-6">
                            <div class="flex items-center justify-between mb-6">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-50">Recent Uploads</h3>
                                <button @onclick="@(() => NavigationManager.NavigateTo("/profile/uploads"))" class="text-primary-600 hover:text-primary-700 text-sm font-medium">View All</button>
                            </div>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                @foreach (var upload in recentUploads)
                                {
                                    <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4 hover:shadow-md transition-shadow">
                                        <div class="flex items-start space-x-3">
                                            <div class="flex-shrink-0">
                                                <div class="w-10 h-10 bg-gray-100 dark:bg-gray-800 rounded-lg flex items-center justify-center">
                                                    <svg class="w-5 h-5 text-gray-600 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        @if (upload.Type == "note")
                                                        {
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                                        }
                                                        else if (upload.Type == "video")
                                                        {
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                                        }
                                                        else
                                                        {
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                                        }
                                                    </svg>
                                                </div>
                                            </div>
                                            <div class="flex-1 min-w-0">
                                                <p class="text-sm font-medium text-gray-900 dark:text-gray-50 truncate">@upload.Title</p>
                                                <p class="text-sm text-gray-500 dark:text-gray-400">@upload.Type • @upload.UploadDate.ToString("MMM dd")</p>
                                                <div class="flex items-center space-x-2 mt-1">
                                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200">
                                                        @upload.Downloads downloads
                                                    </span>
                                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200">
                                                        @upload.Rating ★
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        break;

                    default:
                        // No section selected
                        break;
                }
            </div>
        </div>
    </div>
</div>


<!-- Image Crop Modal -->
<div class="@(showCropModal ? "fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4" : "hidden")">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-hidden">
        <!-- Modal Header -->
        <div class="flex items-center justify-between p-4 border-b border-gray-200">
            <div class="flex items-center gap-2">
                <i class="fas fa-crop text-primary-600"></i>
                <h3 class="text-lg font-semibold text-gray-900">Crop Image</h3>
            </div>
            <button @onclick="HideCropModal"
                    class="text-gray-400 hover:text-gray-600 transition-colors">
                <i class="fas fa-times h-5 w-5"></i>
            </button>
        </div>

        <!-- Modal Body -->
        <div class="p-4">
            <div class="@(isCropping ? "flex items-center justify-center py-8" : "hidden")">
                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
                <span class="ml-3 text-gray-600">Processing image...</span>
            </div>

            <div class="@(isCropping ? "hidden" : "space-y-4")">
                <div id="cropper-container" class="w-full h-[400px] bg-gray-100 rounded-lg overflow-hidden">
                    <img id="imageToCrop" class="w-full h-full object-contain" />
                </div>

                <div class="@(string.IsNullOrEmpty(cropImageError) ? "hidden" : "bg-red-50 border border-red-200 rounded-md p-3")">
                    <div class="flex items-center gap-2">
                        <i class="fas fa-exclamation-triangle text-red-500"></i>
                        <span class="text-sm text-red-700">@cropImageError</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal Footer -->
        <div class="flex items-center justify-end gap-3 p-4 border-t border-gray-200">
            <button @onclick="HideCropModal"
                    class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-600 transition-colors">
                Cancel
            </button>
            <button @onclick="CropImageAsync"
                    disabled="@isCropping"
                    class="px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
                @if (isCropping)
                {
                    <span>Cropping...</span>
                }
                else
                {
                    <span>Crop Image</span>
                }
            </button>
        </div>
    </div>
</div>
@if (showViewProfileImageModal)
{
    <div class="fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-0">
        <div class="bg-transparent shadow-none max-w-5xl w-full max-h-[95vh] overflow-hidden relative">
            <div class="absolute bottom-6 left-0 right-0 flex justify-center z-10">
                <button @onclick="HideViewProfileImageModal"
                        class="px-6 py-3 bg-black/60 hover:bg-black/80 text-white rounded-full text-lg font-medium shadow-lg transition-all duration-200">
                    Close
                </button>
            </div>
            <div class="w-full h-full flex justify-center items-center">
                @if (!string.IsNullOrEmpty(ImageUrlToView))
                {
                    <img src="@ImageUrlToView" alt="Profile Image" class="max-w-full max-h-[95vh] object-contain" />
                }
                else
                {
                    <p class="text-white text-lg">Image not available.</p>
                }
            </div>
        </div>
    </div>
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
