@page "/teacher/dashboard"
@using EduSetu.Components.Layout
@using EduSetu.Domain.Enums
@using EduSetu.Domain.Entities
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Teacher")]
@layout TeacherLayout

<PageTitle>Teacher Dashboard - EduSetu</PageTitle>

<div class="space-y-6">
    <!-- Stats Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        @foreach (var stat in stats)
        {
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow">
                <div class="flex items-center justify-between mb-4">
                    <div class="p-3 rounded-lg @stat.BgColor">
                        <stat.Icon class="w-6 h-6 @stat.Color" />
                    </div>
                    <span class="text-sm @(stat.ChangeType == "positive" ? "text-green-600" : "text-red-600") font-medium">@stat.Change</span>
                </div>
                <div class="text-2xl font-bold text-gray-900 mb-1">@stat.Value</div>
                <div class="text-sm text-gray-600">@stat.Label</div>
            </div>
        }
    </div>

    <!-- Main Content Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Today's Schedule -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div class="flex items-center justify-between mb-6">
                <h3 class="text-lg font-semibold text-gray-900">Today's Classes</h3>
                <button @onclick="@(() => NavigateToTab("schedule"))" 
                        class="text-sm text-blue-600 hover:text-blue-700 font-medium">
                    View All
                </button>
            </div>
            <div class="space-y-4">
                @foreach (var classItem in upcomingClasses)
                {
                    <div class="flex items-center gap-4 p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                        <div class="p-2 bg-blue-100 rounded-lg">
                            <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                            </svg>
                        </div>
                        <div class="flex-1">
                            <h4 class="font-medium text-gray-900">@classItem.Subject</h4>
                            <p class="text-sm text-gray-600">@classItem.Time â€¢ @classItem.Students students</p>
                        </div>
                        <div class="text-right">
                            <p class="text-sm font-medium text-gray-900">@classItem.Room</p>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div class="flex items-center justify-between mb-6">
                <h3 class="text-lg font-semibold text-gray-900">Recent Activity</h3>
                <button @onclick="@(() => NavigateToTab("analytics"))" 
                        class="text-sm text-blue-600 hover:text-blue-700 font-medium">
                    View All
                </button>
            </div>
            <div class="space-y-4">
                @foreach (var activity in recentActivity)
                {
                    <div class="flex items-center gap-4 p-4 bg-gray-50 rounded-lg">
                        <div class="p-2 @GetActivityTypeColor(activity.Type) rounded-lg">
                            <activity.TypeIcon class="w-4 h-4" />
                        </div>
                        <div class="flex-1">
                            <p class="text-sm text-gray-900">@activity.Message</p>
                            <p class="text-xs text-gray-500">@activity.Time</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-6">Quick Actions</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <button @onclick="@(() => NavigateToTab("my-content"))" 
                    class="flex items-center gap-3 p-4 bg-blue-50 hover:bg-blue-100 rounded-lg transition-colors text-left">
                <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                </svg>
                <div>
                    <p class="font-medium text-gray-900">Upload Content</p>
                    <p class="text-sm text-gray-600">Add new materials</p>
                </div>
            </button>
            
            <button @onclick="@(() => NavigateToTab("schedule"))" 
                    class="flex items-center gap-3 p-4 bg-green-50 hover:bg-green-100 rounded-lg transition-colors text-left">
                <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
                <div>
                    <p class="font-medium text-gray-900">Schedule Class</p>
                    <p class="text-sm text-gray-600">Plan your sessions</p>
                </div>
            </button>
            
            <button @onclick="@(() => NavigateToTab("messages"))" 
                    class="flex items-center gap-3 p-4 bg-purple-50 hover:bg-purple-100 rounded-lg transition-colors text-left">
                <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                </svg>
                <div>
                    <p class="font-medium text-gray-900">Message Students</p>
                    <p class="text-sm text-gray-600">Send announcements</p>
                </div>
            </button>
            
            <button @onclick="@(() => NavigateToTab("analytics"))" 
                    class="flex items-center gap-3 p-4 bg-yellow-50 hover:bg-yellow-100 rounded-lg transition-colors text-left">
                <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                </svg>
                <div>
                    <p class="font-medium text-gray-900">View Analytics</p>
                    <p class="text-sm text-gray-600">Track performance</p>
                </div>
            </button>
        </div>
    </div>
</div>

@code {
    // Stats data
    private List<TeacherStatItem> stats = new()
    {
        new TeacherStatItem { Label = "Total Students", Value = "247", Change = "+12%", ChangeType = "positive", Icon = "users", Color = "text-blue-600", BgColor = "bg-blue-100" },
        new TeacherStatItem { Label = "Content Views", Value = "15,420", Change = "+18%", ChangeType = "positive", Icon = "eye", Color = "text-green-600", BgColor = "bg-green-100" },
        new TeacherStatItem { Label = "Downloads", Value = "2,845", Change = "+25%", ChangeType = "positive", Icon = "download", Color = "text-purple-600", BgColor = "bg-purple-100" },
        new TeacherStatItem { Label = "Avg Rating", Value = "4.8", Change = "+0.2", ChangeType = "positive", Icon = "trending-up", Color = "text-yellow-600", BgColor = "bg-yellow-100" }
    };

    // Upcoming classes data
    private List<ClassItem> upcomingClasses = new()
    {
        new ClassItem { Id = "1", Subject = "Data Structures", Time = "10:00 AM", Students = 45, Room = "CS-101" },
        new ClassItem { Id = "2", Subject = "Algorithms", Time = "2:00 PM", Students = 38, Room = "CS-102" },
        new ClassItem { Id = "3", Subject = "Database Systems", Time = "4:00 PM", Students = 52, Room = "CS-103" }
    };

    // Recent activity data
    private List<ActivityItem> recentActivity = new()
    {
        new ActivityItem { Id = "1", Type = "upload", Message = "New video lecture uploaded: \"Advanced Algorithms\"", Time = "2 hours ago", TypeIcon = "upload" },
        new ActivityItem { Id = "2", Type = "comment", Message = "Student commented on \"Data Structures Notes\"", Time = "4 hours ago", TypeIcon = "message-circle" },
        new ActivityItem { Id = "3", Type = "download", Message = "25 new downloads on \"Database Systems Guide\"", Time = "6 hours ago", TypeIcon = "download" },
        new ActivityItem { Id = "4", Type = "rating", Message = "Received 5-star rating on \"Machine Learning Basics\"", Time = "1 day ago", TypeIcon = "star" }
    };

    private void NavigateToTab(string tabId)
    {
        var basePath = "/teacher/dashboard";
        if (tabId == "overview")
        {
            NavigationManager.NavigateTo(basePath);
        }
        else
        {
            NavigationManager.NavigateTo($"{basePath}?tab={tabId}");
        }
    }

    private string GetActivityTypeColor(string type)
    {
        return type switch
        {
            "upload" => "bg-blue-100 text-blue-600",
            "comment" => "bg-green-100 text-green-600",
            "download" => "bg-purple-100 text-purple-600",
            "rating" => "bg-yellow-100 text-yellow-600",
            _ => "bg-gray-100 text-gray-600"
        };
    }


// Data models for Teacher Dashboard
public class TeacherStatItem
{
    public string Label { get; set; } = "";
    public string Value { get; set; } = "";
    public string Change { get; set; } = "";
    public string ChangeType { get; set; } = "";
    public string Icon { get; set; } = "";
    public string Color { get; set; } = "";
    public string BgColor { get; set; } = "";
}

public class ClassItem
{
    public string Id { get; set; } = "";
    public string Subject { get; set; } = "";
    public string Time { get; set; } = "";
    public int Students { get; set; }
    public string Room { get; set; } = "";
}

public class ActivityItem
{
    public string Id { get; set; } = "";
    public string Type { get; set; } = "";
    public string Message { get; set; } = "";
    public string Time { get; set; } = "";
    public string TypeIcon { get; set; } = "";
} 
}