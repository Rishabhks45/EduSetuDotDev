@page "/teacher/dashboard/settings"
@using System.Text.Json
@using Blazored.FluentValidation
@using EduSetu.Components.Layout
@layout TeacherLayout
@inherits BaseComponent
@using EduSetu.Components.Shared
@using EduSetu.Domain.Enums
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Teacher")]

<PageTitle>Settings - Teacher Dashboard</PageTitle>

<div class="space-y-6">
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6">
        <div class="flex flex-col sm:flex-row sm:items-center justify-between gap-4">
            <div>
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Settings</h2>
                <p class="text-gray-600 dark:text-gray-400 mt-1">Manage your account preferences and profile information</p>
            </div>
            <div class="flex items-center gap-3">
                @if (!isEditing)
                {
                    <button @onclick="ToggleEditMode" class="flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-900 dark:text-white">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                        </svg>
                        Edit
                    </button>
                }
            </div>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
        <div class="lg:col-span-1">
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-4">
                <nav class="space-y-2">
                    @foreach (var tab in tabs)
                    {
                        <button @onclick="@(() => activeTab = tab.Id)"
                                class="w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-colors text-left @(activeTab == tab.Id ? "bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-400 border border-blue-200 dark:border-blue-700" : "text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-800 dark:hover:text-gray-200")">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                @((MarkupString)tab.Icon)
                            </svg>
                            <span class="font-medium">@tab.Label</span>
                        </button>
                    }
                </nav>
            </div>
        </div>

        <div class="lg:col-span-3">
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6">
                @switch (activeTab)
                {
                    case "personal":
                        <div class="space-y-6">
                            <EditForm Model="@UpdateProfileDto" OnValidSubmit="@HandleSubmitAsync">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Personal Information</h3>

                                <div class="flex items-center gap-6 mb-6">
                                    <div class="relative">
                                        <div class="w-20 h-20 sm:w-24 sm:h-24 bg-gradient-to-br from-primary-400 to-primary-600 rounded-full flex items-center justify-center text-white text-xl sm:text-2xl font-bold overflow-hidden">

                                            @* <img src="@UpdateProfileDto.ProfilePictureUrl" alt="Profile" class="w-24 h-24 rounded-full border-4 border-white dark:border-gray-700 shadow-lg object-cover" /> *@
                                            @* <img src="/uploads/images/1ff75da7-3429-4873-934b-41ececfdf84e.png" alt="Profile" class="w-24 h-24 rounded-full border-4 border-white dark:border-gray-700 shadow-lg object-cover" /> *@
                                            @if (!string.IsNullOrEmpty(UpdateProfileDto.ImageBytes))
                                            {
                                                <img src="@UpdateProfileDto.ImageBytes" alt="Profile" class="w-24 h-24 rounded-full border-4 border-white dark:border-gray-700 shadow-lg object-cover" />
                                            }
                                            else if (IsProfileImageExists())
                                            {
                                                <img src="@UpdateProfileDto?.ProfilePictureUrl" alt="Profile" class="w-24 h-24 rounded-full border-4 border-white dark:border-gray-700 shadow-lg object-cover" />
                                            }
                                            else
                                            {
                                                <span>@GetUserInitials()</span>
                                            }
                                        </div>
                                        @if (isEditing)
                                        {
                                            <label for="profilePictureInput" class="absolute -bottom-1 -right-1 sm:-bottom-2 sm:-right-2 bg-white dark:bg-gray-800 rounded-full p-2 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-md transition-shadow cursor-pointer">
                                                <svg class="w-4 h-4 text-gray-600 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                </svg>
                                            </label>

                                            @if (!string.IsNullOrEmpty(UpdateProfileDto.ImageBytes) || IsProfileImageExists())
                                            {
                                                <button type="button" @onclick="ClearProfilePicture" class="absolute -top-1 -right-1 sm:-top-2 sm:-right-2 bg-red-500 hover:bg-red-600 rounded-full p-1.5 shadow-lg border border-red-400 hover:border-red-500 transition-all duration-200">
                                                    <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                                    </svg>
                                                </button>
                                            }

                                            <InputFile OnChange="HandleFileSelected"
                                                       accept="image/*"
                                                       maxAllowedSize="2097152"
                                                       class="hidden"
                                                       style="display:none;"
                                                       id="profilePictureInput" />

                                        }
                                    </div>
                                    <div>
                                        <h4 class="font-semibold text-gray-900 dark:text-white">@UpdateProfileDto.FullName</h4>
                                        <p class="text-gray-600 dark:text-gray-400">@UpdateProfileDto.Designation</p>
                                        <p class="text-sm text-gray-500 dark:text-gray-500">@UpdateProfileDto.Institution</p>
                                    </div>
                                </div>

                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">First Name</label>
                                        <InputText @bind-Value="UpdateProfileDto.FirstName" disabled="@(!isEditing)"
                                                   placeholder="First Name"
                                                   class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400" />
                                        <ValidationMessage For="@(() => UpdateProfileDto.FirstName)" class="text-red-500 dark:text-red-400 text-sm" />


                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Last Name</label>
                                        <InputText @bind-Value="UpdateProfileDto.LastName" disabled="@(!isEditing)"
                                                   placeholder="Last Name"
                                                   class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400" />
                                        <ValidationMessage For="@(() => UpdateProfileDto.FirstName)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Username</label>
                                        <InputText @bind-Value="UpdateProfileDto.Username" disabled="@(!isEditing)"
                                                   placeholder="Username"
                                                   class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400" />
                                        <ValidationMessage For="@(() => UpdateProfileDto.FirstName)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email</label>
                                        <InputText type="email" @bind-Value="UpdateProfileDto.Email" disabled="@(!isEditing)"
                                                   placeholder="abc@gmail.com"
                                                   class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400" />
                                        <ValidationMessage For="@(() => UpdateProfileDto.FirstName)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Phone Number</label>
                                        <InputText type="tel" @bind-Value="UpdateProfileDto.PhoneNumber" disabled="@(!isEditing)"
                                                   placeholder="+91 8789352863"
                                                   class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400" />
                                        <ValidationMessage For="@(() => UpdateProfileDto.FirstName)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <div>
                                        <label for="institution" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Highest Qualification *
                                        </label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <svg class="h-5 w-5 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                                                </svg>
                                            </div>
                                            <InputSelect id="institution" name="institution" @bind-Value="UpdateProfileDto.qualificationType"
                                                         class="pl-10 w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400">
                                                <option value="">Select Institution</option>
                                                @foreach (QualificationType qualification in Enum.GetValues(typeof(QualificationType)))
                                                {
                                                    <option value="@qualification">
                                                        @GetEnumDescription(qualification)
                                                    </option>
                                                }
                                            </InputSelect>
                                        </div>
                                        <ValidationMessage For="@(() => UpdateProfileDto.qualificationType)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <div>
                                        <label for="course" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Specialization *
                                        </label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <svg class="h-5 w-5 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5z"></path>
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z"></path>
                                                </svg>
                                            </div>
                                            <InputSelect id="course" name="course" @bind-value="UpdateProfileDto.Specialization"
                                                         class="pl-10 w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400">
                                                <option value="">Select Course</option>
                                                @foreach (Specialization specialization in Enum.GetValues(typeof(Specialization)))
                                                {
                                                    <option value="@specialization">
                                                        @GetEnumDescription(specialization)
                                                    </option>
                                                }
                                            </InputSelect>
                                        </div>
                                        <ValidationMessage For="@(() => UpdateProfileDto.Specialization)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <div>
                                        <label for="year" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Teaching Experience *
                                        </label>
                                        <div class="relative">

                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                 class="absolute left-2 top-2 w-5 h-5 text-gray-500"
                                                 fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M12 20V6.5a2.5 2.5 0 00-2.5-2.5H4v16h7.5a.5.5 0 01.5.5zm0 0V6.5a2.5 2.5 0 012.5-2.5H20v16h-7.5a.5.5 0 00-.5.5z" />
                                            </svg>

                                            <InputSelect id="year" name="year" @bind-value="UpdateProfileDto.teachingExperience"
                                                         class="pl-10 w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400"
                                                         placeholder="Enter Teaching Experience ">
                                                <option value="" selected>Select Experience</option>
                                                @foreach (TeachingExperience experience in Enum.GetValues(typeof(TeachingExperience)))
                                                {
                                                    <option value="@experience">
                                                        @GetEnumDescription(experience)
                                                    </option>
                                                }
                                            </InputSelect>
                                        </div>

                                    </div>
                                    <div>
                                        <label for="year" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Certifications
                                        </label>
                                        <div class="relative">
                                            <!-- Icon -->
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m1 9a9 9 0 11-8-16 9 9 0 018 16z" />
                                                </svg>

                                            </div>

                                            <!-- Select -->
                                            <!-- Select -->
                                            <InputSelect @bind-value="UpdateProfileDto.certifications"
                                                         class="pl-10 w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400">
                                                <option value="">Select Certifications</option>
                                                @foreach (Certifications certification in Enum.GetValues(typeof(Certifications)))
                                                {
                                                    <option value="@certification">
                                                        @GetEnumDescription(certification)
                                                    </option>
                                                }
                                            </InputSelect>

                                        </div>
                                    </div>
                                </div>

                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Bio</label>
                                    <textarea @bind="settings.Personal.Bio" @bind:after="() => unsavedChanges = true" disabled="@(!isEditing)" rows="4" placeholder="Tell us about yourself..."
                                              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400 resize-none"></textarea>
                                </div>
                                <div class="mt-6 flex gap-2 justify-end">
                                    @if (isEditing)
                                    {
                                        <button @onclick="ToggleEditMode" class="flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-900 dark:text-white">
                                            Cancel
                                        </button>

                                        <button type="submit"
                                                disabled="@(!isEditing)"
                                                class="px-6 py-2 bg-blue-600 text-white rounded-lg font-medium transition-colors
                                                                       hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2
                                                                       disabled:bg-gray-400 disabled:cursor-not-allowed">
                                            <div class="flex items-center gap-2">
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M5 13l4 4L19 7"></path>
                                                </svg>
                                                Update Profile
                                            </div>
                                        </button>
                                    }
                                </div>
                            </EditForm>
                        </div>
                        break;


                    case "Institution":
                        <div class="space-y-6">
                            <EditForm Model="@InstituteformData" OnValidSubmit="@HandleCoachingDetailsSubmitAsync">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Institue Information</h3>

                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <!-- Institute Name -->
                                    <div>
                                        <label for="instituteName" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Institute Name *
                                        </label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <svg class="h-5 w-5 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                                </svg>
                                            </div>
                                            <InputText id="instituteName" @bind-Value="InstituteformData.InstituteName"
                                                       class="block w-full pl-10 pr-8 h-[40px]  border-0 border-b-2
                                                                                       border-gray-300 dark:border-gray-600 focus:outline-none focus:border-primary-500
                                                                                       bg-transparent text-gray-900 dark:text-white
                                                                                       dark:focus:border-gray-300"
                                                       placeholder="Enter institute name" disabled="@(!isEditing)" />
                                        </div>
                                        <ValidationMessage For="@(() => InstituteformData.InstituteName)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <!-- Mode of Coaching -->
                                    <div>
                                        <label for="modeOfCoaching" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Mode of Coaching *
                                        </label>
                                        <div class="relative">
                                            <!-- Globe Icon -->
                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                 class="absolute left-2 top-2 w-5 h-5 text-gray-500"
                                                 fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M12 3c4.97 0 9 4.03 9 9s-4.03 9-9 9-9-4.03-9-9 4.03-9 9-9zM2.05 11h19.9M12 2.05v19.9" />
                                            </svg>
                                            <InputSelect id="modeOfCoaching" @bind-Value="InstituteformData.PreferredTeachingMode"
                                                         class="block w-full pl-10 pr-8 h-[40px]  border-0 border-b-2
                                                                                                       border-gray-300 dark:border-gray-600 focus:outline-none focus:border-primary-500
                                                                                                       bg-transparent text-gray-900 dark:text-white my-custom-input"
                                                         placeholder="Enter mode of coaching (Online/Offline)" disabled="@(!isEditing)">
                                                <option value="">Select Mode of Coaching</option>
                                                @foreach (PreferredTeachingMode preferredTeachingMode in Enum.GetValues(typeof(PreferredTeachingMode)))
                                                {
                                                    <option value="@preferredTeachingMode">
                                                        @GetEnumDescription(preferredTeachingMode)
                                                    </option>
                                                }
                                            </InputSelect>
                                        </div>
                                        <ValidationMessage For="@(() => InstituteformData.PreferredTeachingMode)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <!-- Number of Students -->
                                    <div>
                                        <label for="numStudents" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Number of Students *
                                        </label>

                                        <div class="relative">
                                            <!-- Users Icon -->
                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                 class="absolute left-2 top-2 w-5 h-5 text-gray-500"
                                                 fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M17 20h5v-2a4 4 0 00-3-3.87M9 20H4v-2a4 4 0 013-3.87m10-7a4 4 0 11-8 0 4 4 0 018 0zM7 10a4 4 0 100-8 4 4 0 000 8z" />
                                            </svg>
                                            <InputText @bind-Value="InstituteformData.NumberOfStudentsText"
                                                       class="block w-full pl-10 pr-8 h-[40px] border-0 border-b-2
                                                                                       border-gray-300 dark:border-gray-600 focus:outline-none focus:border-primary-500
                                                                                       bg-transparent text-gray-900 dark:text-white"
                                                       placeholder="e.g. 120" disabled="@(!isEditing)" />
                                        </div>
                                        <ValidationMessage For="@(() => InstituteformData.NumberOfStudents)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <!-- Address -->
                                    <div>
                                        <label for="address" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Address *
                                        </label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <svg class="h-5 w-5 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M12 15v2m-6 4h12a2 2 0
                                                                                      002-2v-6a2 2 0 00-2-2H6a2
                                                                                      2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4
                                                                                      4 0 00-8 0v4h8z"></path>
                                                </svg>
                                            </div>
                                            <InputText id="address" @bind-Value="InstituteformData.Address"
                                                       class="block w-full pl-10 pr-8 h-[40px]  border-0 border-b-2
                                                                                       border-gray-300 dark:border-gray-600 focus:outline-none focus:border-primary-500
                                                                                       bg-transparent text-gray-900 dark:text-white"
                                                       placeholder="Enter full address" disabled="@(!isEditing)" />
                                        </div>
                                        <ValidationMessage For="@(() => InstituteformData.Address)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <!-- City -->
                                    <div>
                                        <label for="city" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            City *
                                        </label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <svg xmlns="http://www.w3.org/2000/svg"
                                                     class="absolute left-2 top-2 w-5 h-5 text-gray-500"
                                                     fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M3 21h18M9 8h6m-6 4h6m-7 8V5a2 2 0 012-2h2a2 2 0 012 2v15" />
                                                </svg>
                                            </div>
                                            <InputText id="city" @bind-Value="InstituteformData.City" disabled="@(!isEditing)"
                                                       class="block w-full pl-10 pr-8 h-[40px] border-0 border-b-2
                                                                                       border-gray-300 dark:border-gray-600 focus:outline-none focus:border-primary-500
                                                                                       bg-transparent text-gray-900 dark:text-white"
                                                       placeholder="Enter city name" />
                                        </div>
                                        <ValidationMessage For="@(() => InstituteformData.City)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <!-- State -->
                                    <div>
                                        <label for="state" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            State *
                                        </label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <svg xmlns="http://www.w3.org/2000/svg"
                                                     class="absolute left-2 top-2 w-5 h-5 text-gray-500"
                                                     fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M3 21h18M12 3l8 5v13H4V8l8-5zM9 10v7M15 10v7" />
                                                </svg>
                                            </div>
                                            <InputText id="state" @bind-Value="InstituteformData.State" disabled="@(!isEditing)"
                                                       class="block w-full pl-10 pr-8 h-[40px] border-0 border-b-2
                                                                                       border-gray-300 dark:border-gray-600 focus:outline-none focus:border-primary-500
                                                                                       bg-transparent text-gray-900 dark:text-white"
                                                       placeholder="Enter state name" />
                                        </div>
                                        <ValidationMessage For="@(() => InstituteformData.State)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>

                                    <!-- Pin Code -->
                                    <div>
                                        <label for="pinCode" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                            Pin Code *
                                        </label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <svg xmlns="http://www.w3.org/2000/svg"
                                                     class="absolute left-2 top-2 w-5 h-5 text-gray-500"
                                                     fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M5 9h14M5 15h14M9 5v14M15 5v14" />
                                                </svg>
                                            </div>
                                            <InputText id="pinCode" @bind-Value="InstituteformData.PinCode" disabled="@(!isEditing)"
                                                       class="block w-full pl-10 pr-8 h-[40px] border-0 border-b-2
                                                                                       border-gray-300 dark:border-gray-600 focus:outline-none focus:border-primary-500
                                                                                       bg-transparent text-gray-900 dark:text-white"
                                                       placeholder="Enter pin code" />
                                        </div>
                                        <ValidationMessage For="@(() => InstituteformData.PinCode)" class="text-red-500 dark:text-red-400 text-sm" />
                                    </div>
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 my-2">Subjects Teaching</label>
                                    <div class="flex flex-wrap gap-2 mb-3 min-h-[30px]">
                                        @foreach (var subject in settings.Professional.Subjects)
                                        {
                                            <span class="inline-flex items-center gap-2 px-3 py-1 bg-blue-100 dark:bg-blue-900/50 text-blue-800 dark:text-blue-300 text-sm font-medium rounded-full">
                                                @subject
                                                @if (isEditing)
                                                {
                                                    <button @onclick="@(() => RemoveSubject(subject))" class="text-blue-600 dark:text-blue-300 hover:text-blue-900 dark:hover:text-blue-100 font-bold -mr-1">×</button>
                                                }
                                            </span>
                                        }
                                    </div>
                                    @if (isEditing)
                                    {
                                        <div class="flex gap-2">
                                            <input @bind="newSubject" placeholder="Add subject" @onkeypress="HandleSubjectKeyPress"
                                                   class="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                                            <button @onclick="AddSubject" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">Add</button>
                                        </div>
                                    }
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 my-2">Qualifications</label>
                                    <div class="flex flex-wrap gap-2 mb-3 min-h-[30px]">
                                        @foreach (var qualification in settings.Professional.Qualifications)
                                        {
                                            <span class="inline-flex items-center gap-2 px-3 py-1 bg-green-100 dark:bg-green-900/50 text-green-800 dark:text-green-300 text-sm font-medium rounded-full">
                                                @qualification
                                                @if (isEditing)
                                                {
                                                    <button @onclick="@(() => RemoveQualification(qualification))" class="text-green-600 dark:text-green-300 hover:text-green-900 dark:hover:text-green-100 font-bold -mr-1">×</button>
                                                }
                                            </span>
                                        }
                                    </div>
                                    @if (isEditing)
                                    {
                                        <div class="flex gap-2">
                                            <input @bind="newQualification" placeholder="Add qualification" @onkeypress="HandleQualificationKeyPress"
                                                   class="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                                            <button @onclick="AddQualification" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">Add</button>
                                        </div>
                                    }
                                </div>
                                <div class="mt-6 flex gap-2 justify-end">
                                    @if (isEditing)
                                    {
                                        <button @onclick="ToggleEditMode" type="button" class="flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-900 dark:text-white">
                                            Cancel
                                        </button>

                                        <button type="submit"
                                                disabled="@(!isEditing)"
                                                class="px-6 py-2 bg-blue-600 text-white rounded-lg font-medium transition-colors
                                                            hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2
                                                            disabled:bg-gray-400 disabled:cursor-not-allowed">
                                            <div class="flex items-center gap-2">
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M5 13l4 4L19 7"></path>
                                                </svg>
                                                Update Coaching Details
                                            </div>
                                        </button>
                                    }
                                </div>
                            </EditForm>
                        </div>
                        break;
                    case "preferences":
                        <div class="space-y-6">
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Preferences</h3>
                                <div class="mb-6">
                                    <h4 class="font-medium text-gray-900 dark:text-gray-200 mb-3">Notifications</h4>
                                    <div class="space-y-4">
                                        <label class="flex items-center justify-between cursor-pointer">
                                            <div>
                                                <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Email Notifications</span>
                                                <p class="text-xs text-gray-500 dark:text-gray-400">Receive notifications via email.</p>
                                            </div>
                                            <input type="checkbox" @bind="settings.Preferences.Notifications.Email" @bind:after="() => unsavedChanges = true" disabled="@(!isEditing)" class="rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500 disabled:opacity-50 dark:bg-gray-700" />
                                        </label>
                                        <label class="flex items-center justify-between cursor-pointer">
                                            <div>
                                                <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Push Notifications</span>
                                                <p class="text-xs text-gray-500 dark:text-gray-400">Get updates via browser push notifications.</p>
                                            </div>
                                            <input type="checkbox" @bind="settings.Preferences.Notifications.Push" @bind:after="() => unsavedChanges = true" disabled="@(!isEditing)" class="rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500 disabled:opacity-50 dark:bg-gray-700" />
                                        </label>
                                        <label class="flex items-center justify-between cursor-pointer">
                                            <div>
                                                <span class="text-sm font-medium text-gray-700 dark:text-gray-300">SMS Notifications</span>
                                                <p class="text-xs text-gray-500 dark:text-gray-400">Receive critical alerts on your phone.</p>
                                            </div>
                                            <input type="checkbox" @bind="settings.Preferences.Notifications.Sms" @bind:after="() => unsavedChanges = true" disabled="@(!isEditing)" class="rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500 disabled:opacity-50 dark:bg-gray-700" />
                                        </label>
                                        <label class="flex items-center justify-between cursor-pointer">
                                            <div>
                                                <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Reminders</span>
                                                <p class="text-xs text-gray-500 dark:text-gray-400">Class and assignment reminders.</p>
                                            </div>
                                            <input type="checkbox" @bind="settings.Preferences.Notifications.Reminders" @bind:after="() => unsavedChanges = true" disabled="@(!isEditing)" class="rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500 disabled:opacity-50 dark:bg-gray-700" />
                                        </label>
                                    </div>
                                </div>

                                <div class="mb-6">
                                    <h4 class="font-medium text-gray-900 dark:text-gray-200 mb-3">Privacy</h4>
                                    <div class="space-y-4">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Profile Visibility</label>
                                            <select @bind="settings.Preferences.Privacy.ProfileVisibility" @bind:after="() => unsavedChanges = true" disabled="@(!isEditing)"
                                                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 dark:disabled:bg-gray-700 dark:disabled:text-gray-400">
                                                <option value="public">Public</option>
                                                <option value="private">Private</option>
                                                <option value="institution">Institution Only</option>
                                            </select>
                                        </div>
                                        <label class="flex items-center justify-between cursor-pointer">
                                            <span class="text-sm text-gray-700 dark:text-gray-300">Show Email in Profile</span>
                                            <input type="checkbox" @bind="settings.Preferences.Privacy.ShowEmail" @bind:after="() => unsavedChanges = true" disabled="@(!isEditing)" class="rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500 disabled:opacity-50 dark:bg-gray-700" />
                                        </label>
                                        <label class="flex items-center justify-between cursor-pointer">
                                            <span class="text-sm text-gray-700 dark:text-gray-300">Show Phone in Profile</span>
                                            <input type="checkbox" @bind="settings.Preferences.Privacy.ShowPhone" @bind:after="() => unsavedChanges = true" disabled="@(!isEditing)" class="rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500 disabled:opacity-50 dark:bg-gray-700" />
                                        </label>
                                        <label class="flex items-center justify-between cursor-pointer">
                                            <span class="text-sm text-gray-700 dark:text-gray-300">Allow Messages from Students</span>
                                            <input type="checkbox" @bind="settings.Preferences.Privacy.AllowMessages" @bind:after="() => unsavedChanges = true" disabled="@(!isEditing)" class="rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500 disabled:opacity-50 dark:bg-gray-700" />
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        break;
                    case "security":
                        <div class="space-y-6">
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Security</h3>
                                <div class="space-y-4">
                                    <div class="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-900/50 rounded-lg">
                                        <div>
                                            <h4 class="font-medium text-gray-900 dark:text-gray-200">Two-Factor Authentication</h4>
                                            <p class="text-sm text-gray-600 dark:text-gray-400">Add an extra layer of security to your account</p>
                                        </div>
                                        <div class="flex items-center gap-3">
                                            <span class="text-sm font-medium @(settings.Security.TwoFactorEnabled ? "text-green-600 dark:text-green-400" : "text-gray-500 dark:text-gray-400")">
                                                @(settings.Security.TwoFactorEnabled ? "Enabled" : "Disabled")
                                            </span>
                                            <button @onclick="@(() => { settings.Security.TwoFactorEnabled = !settings.Security.TwoFactorEnabled; unsavedChanges = true; })"
                                                    disabled="@(!isEditing)"
                                                    class="px-4 py-2 text-sm font-medium @(settings.Security.TwoFactorEnabled ? "bg-red-600 hover:bg-red-700" : "bg-green-600 hover:bg-green-700") text-white rounded-lg transition-colors disabled:bg-gray-400 dark:disabled:bg-gray-600">
                                                @(settings.Security.TwoFactorEnabled ? "Disable" : "Enable")
                                            </button>
                                        </div>
                                    </div>
                                    <div class="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-900/50 rounded-lg">
                                        <div>
                                            <h4 class="font-medium text-gray-900 dark:text-gray-200">Active Sessions</h4>
                                            <p class="text-sm text-gray-600 dark:text-gray-400">@settings.Security.ActiveSessions active sessions</p>
                                        </div>
                                        <button class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors">
                                            Sign Out All
                                        </button>
                                    </div>
                                    <div class="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-900/50 rounded-lg">
                                        <div>
                                            <h4 class="font-medium text-gray-900 dark:text-gray-200">Change Password</h4>
                                            <p class="text-sm text-gray-600 dark:text-gray-400">
                                                Last changed: @settings.Security.LastPasswordChange
                                            </p>
                                        </div>

                                        <button @onclick="@(() => showPasswordModal = !showPasswordModal)"
                                                class="flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors">

                                            <span>Change Password</span>

                                            @if (showPasswordModal)
                                            {
                                                <!-- Up Arrow -->
                                                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                                                </svg>
                                            }
                                            else
                                            {
                                                <!-- Down Arrow -->
                                                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                                </svg>
                                            }
                                        </button>
                                    </div>

                                    @if (showPasswordModal)

                                    {

                                        <div class="bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-800 p-6">                                            
                                            <div class="space-y-6">
                                                <div class="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4">
                                                    <div class="flex">
                                                        <div class="flex-shrink-0">
                                                            <svg class="h-5 w-5 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                                            </svg>
                                                        </div>
                                                        <div class="ml-3">
                                                            <h3 class="text-sm font-medium text-yellow-800 dark:text-yellow-200">Security Notice</h3>
                                                            <div class="mt-2 text-sm text-yellow-700 dark:text-yellow-300">
                                                                <p>For your security, you'll need to verify your current password before changing it.</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <EditForm Model="@passwordFormData" OnValidSubmit="@ChangePasswordAsync" class="space-y-6">
                                                    <FluentValidationValidator />

                                                    <div class="space-y-4">
                                                        <!-- Current Password -->
                                                        <div>
                                                            <label for="current-password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                                Current Password
                                                            </label>
                                                            <div class="relative">
                                                                <div class="absolute inset-y-0 left-0 flex items-center pl-3">
                                                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                                                    </svg>
                                                                </div>
                                                                <InputText @bind-Value="passwordFormData.CurrentPassword"
                                                                type="@(showCurrentPassword ? "text" : "password")"
                                                                id="current-password"
                                                                class="w-full pl-10 pr-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
                                                                placeholder="••••••••" />
                                                                <button type="button" class="absolute right-3 top-3 text-text-secondary hover:text-text-primary" @onclick="@(() => TogglePasswordVisibility("current"))">
                                                                    <i class="fas @(showCurrentPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                                                </button>
                                                            </div>
                                                            <ValidationMessage For="@(() => passwordFormData.CurrentPassword)"
                                                            class="mt-1.5 text-sm text-red-500 dark:text-red-400" />
                                                        </div>

                                                        <!-- New Password -->
                                                        <div>
                                                            <label for="new-password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                                New Password
                                                            </label>
                                                            <div class="relative">
                                                                <div class="absolute inset-y-0 left-0 flex items-center pl-3">
                                                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                                                    </svg>
                                                                </div>
                                                                <InputText @bind-Value="passwordFormData.NewPassword"
                                                                @oninput="ValidatePassword"
                                                                type="@(showNewPassword ? "text" : "password")"
                                                                id="new-password"
                                                                class="w-full pl-10 pr-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
                                                                placeholder="••••••••" />
                                                                <button type="button" class="absolute right-3 top-3 text-text-secondary hover:text-text-primary" @onclick="@(() => TogglePasswordVisibility("new"))">
                                                                    <i class="fas @(showNewPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                                                </button>
                                                            </div>
                                                            <ValidationMessage For="@(() => passwordFormData.NewPassword)"
                                                            class="mt-1.5 text-sm text-red-500 dark:text-red-400" />
                                                            @if (isVisibleCheckBox)

                                                            {

                                                                <!-- Password strength checklist -->
                                                                <div class="mt-2 text-xs">
                                                                    <div class="flex items-center gap-2">
                                                                        <i class="far @(hasMinLength ? "fa-check-square text-brand-cyan-dark" : "fa-square text-gray-400")"></i>
                                                                        <span>At least 8 characters</span>
                                                                    </div>
                                                                    <div class="flex items-center gap-2">
                                                                        <i class="far @(hasUppercase ? "fa-check-square text-brand-cyan-dark" : "fa-square text-gray-400")"></i>
                                                                        <span>At least 1 uppercase letter</span>
                                                                    </div>
                                                                    <div class="flex items-center gap-2">
                                                                        <i class="far @(hasNumber ? "fa-check-square text-brand-cyan-dark" : "fa-square text-gray-400")"></i>
                                                                        <span>At least 1 number</span>
                                                                    </div>
                                                                    <div class="flex items-center gap-2">
                                                                        <i class="far @(hasSpecialChar ? "fa-check-square text-brand-cyan-dark" : "fa-square text-gray-400")"></i>
                                                                        <span>At least 1 special character</span>
                                                                    </div>
                                                                </div>

                                                            }
                                                        </div>

                                                        <!-- Confirm Password -->
                                                        <div>
                                                            <label for="confirm-password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                                Confirm New Password
                                                            </label>
                                                            <div class="relative">
                                                                <div class="absolute inset-y-0 left-0 flex items-center pl-3">
                                                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                                                    </svg>
                                                                </div>
                                                                <InputText @bind-Value="passwordFormData.ConfirmPassword"
                                                                type="@(showConfirmPassword ? "text" : "password")"
                                                                id="confirm-password"
                                                                class="w-full pl-10 pr-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
                                                                placeholder="••••••••" />
                                                                <button type="button" class="absolute right-3 top-3 text-text-secondary hover:text-text-primary" @onclick="@(() => TogglePasswordVisibility("confirm"))">
                                                                    <i class="fas @(showConfirmPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                                                </button>
                                                            </div>
                                                            <ValidationMessage For="@(() => passwordFormData.ConfirmPassword)"
                                                            class="mt-1.5 text-sm text-red-500 dark:text-red-400" />
                                                        </div>
                                                    </div>

                                                    <!-- Action Buttons -->
                                                    <div class="flex items-center justify-end gap-3 pt-6">
                                                        <button type="button"
                                                                @onclick="@(() => showPasswordModal = !showPasswordModal)"
                                                        class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                                                            Cancel
                                                        </button>
                                                        <button type="submit"
                                                        class="px-4 py-2 text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 rounded-lg transition-colors flex items-center gap-2"
                                                        disabled="@isChangingPassword">
                                                            @if (!isChangingPassword)

                                                            {

                                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                                    d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002
                                                         2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                                                </svg>
                                                                <span>Update Password</span>

                                                            }

                                                            else

                                                            {

                                                                <svg class="w-4 h-4 animate-spin" fill="none" viewBox="0 0 24 24">
                                                                    <circle class="opacity-25" cx="12" cy="12" r="10"
                                                                    stroke="currentColor" stroke-width="4"></circle>
                                                                    <path class="opacity-75" fill="currentColor"
                                                                    d="M4 12a8 8 0 018-8v4a4 4 0 00-4
                                                         4H4z"></path>
                                                                </svg>
                                                                <span>Updating...</span>

                                                            }
                                                        </button>

                                                    </div>
                                                </EditForm>
                                            </div>
                                        </div>

                                    }
                                    
                                </div>
                            </div>
                        </div>
                        break;
                    case "account":
                        <div class="space-y-6">
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Account</h3>
                                <div class="space-y-4">
                                    <div class="flex items-center justify-between p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-900/50 rounded-lg">
                                        <div>
                                            <h4 class="font-medium text-red-900 dark:text-red-300">Delete Account</h4>
                                            <p class="text-sm text-red-700 dark:text-red-400">This action cannot be undone. All your data will be permanently deleted.</p>
                                        </div>
                                        <button @onclick="@(() => showDeleteModal = true)" class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors">
                                            Delete Account
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        break;
                }
            </div>
        </div>
    </div>
</div>


<!-- Image Crop Modal -->
<div class="@(showCropModal ? "fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4" : "hidden")">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-hidden">
        <!-- Modal Header -->
        <div class="flex items-center justify-between p-4 border-b border-gray-200">
            <div class="flex items-center gap-2">
                <i class="fas fa-crop text-primary-600"></i>
                <h3 class="text-lg font-semibold text-gray-900">Crop Image</h3>
            </div>
            <button @onclick="HideCropModal"
                    class="text-gray-400 hover:text-gray-600 transition-colors">
                <i class="fas fa-times h-5 w-5"></i>
            </button>
        </div>

        <!-- Modal Body -->
        <div class="p-4">
            <div class="@(isCropping ? "flex items-center justify-center py-8" : "hidden")">
                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
                <span class="ml-3 text-gray-600">Processing image...</span>
            </div>

            <div class="@(isCropping ? "hidden" : "space-y-4")">
                <div id="cropper-container" class="w-full h-[400px] bg-gray-100 rounded-lg overflow-hidden">
                    <img id="imageToCrop" class="w-full h-full object-contain" />
                </div>

                <div class="@(string.IsNullOrEmpty(cropImageError) ? "hidden" : "bg-red-50 border border-red-200 rounded-md p-3")">
                    <div class="flex items-center gap-2">
                        <i class="fas fa-exclamation-triangle text-red-500"></i>
                        <span class="text-sm text-red-700">@cropImageError</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal Footer -->
        <div class="flex items-center justify-end gap-3 p-4 border-t border-gray-200">
            <button @onclick="HideCropModal"
                    class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-600 transition-colors">
                Cancel
            </button>
            <button @onclick="CropImageAsync"
                    disabled="@isCropping"
                    class="px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
                @if (isCropping)
                {
                    <span>Cropping...</span>
                }
                else
                {
                    <span>Crop Image</span>
                }
            </button>
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
<Loader IsLoading="isLoading" />
<ErrorModal IsVisible="showErrorModal" Errors="errors" OnClose="HideErrorModal" /> 