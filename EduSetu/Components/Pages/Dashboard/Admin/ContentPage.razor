@page "/admin/dashboard/content"
@using EduSetu.Components.Layout
@using EduSetu.Domain.Enums
@using EduSetu.Domain.Entities
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "SuperAdmin")]
@layout AdminLayout

<PageTitle>Content Moderation - Admin Dashboard</PageTitle>

<div class="space-y-6">
    <!-- Header -->
    <div class="flex justify-between items-center">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Content Moderation</h1>
            <p class="text-gray-600">Review and moderate user-submitted content</p>
        </div>
        <div class="flex space-x-2">
            <button class="bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                </svg>
                Pending Review (5)
            </button>
            <button class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                </svg>
                Flagged Content (3)
            </button>
        </div>
    </div>

    <!-- Filters -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Content Type</label>
                <select class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
                    <option value="">All Types</option>
                    <option value="notes">Notes</option>
                    <option value="video">Video</option>
                    <option value="pyq">PYQ</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                <select class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
                    <option value="">All Status</option>
                    <option value="pending">Pending</option>
                    <option value="approved">Approved</option>
                    <option value="rejected">Rejected</option>
                    <option value="flagged">Flagged</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Search</label>
                <input type="text" placeholder="Search content..."
                       class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500" />
            </div>
            <div class="flex items-end">
                <button class="w-full bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-2 rounded-lg font-medium transition-colors">
                    Filter
                </button>
            </div>
        </div>
    </div>

    <!-- Content List -->
    <div class="space-y-4">
        @foreach (var content in contentItems)
        {
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <div class="flex items-start justify-between">
                    <div class="flex items-start space-x-4">
                        <div class="p-3 @GetContentTypeColor(content.Type) rounded-lg">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                @if (content.Type == "video")
                                {
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                }
                                else
                                {
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                }
                            </svg>
                        </div>
                        <div class="flex-1">
                            <div class="flex items-center space-x-2 mb-2">
                                <h3 class="text-lg font-semibold text-gray-900">@content.Title</h3>
                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium @GetStatusColor(content.Status)">
                                    @content.Status
                                </span>
                            </div>
                            <p class="text-gray-600 mb-2">@content.Description</p>
                            <div class="flex items-center space-x-4 text-sm text-gray-500">
                                <span>By @content.Author</span>
                                <span>•</span>
                                <span>@content.UploadDate</span>
                                <span>•</span>
                                <span>@content.Views views</span>
                                @if (content.Rating > 0)
                                {
                                    <span>•</span>
                                    <span class="flex items-center">
                                        <svg class="w-4 h-4 text-yellow-400 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                        </svg>
                                        @content.Rating
                                    </span>
                                }
                            </div>
                            @if (content.IsFlagged)
                            {
                                <div class="mt-3 p-3 bg-red-50 border border-red-200 rounded-lg">
                                    <div class="flex items-center text-red-800">
                                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                        </svg>
                                        <span class="text-sm font-medium">Flagged for review: @content.FlagReason</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="flex space-x-2">
                        @if (content.Status == "pending")
                        {
                            <button class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                                Approve
                            </button>
                            <button class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                                Reject
                            </button>
                        }
                        else
                        {
                            <button class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                                Edit
                            </button>
                            <button class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                                View
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 px-6 py-4">
        <div class="flex items-center justify-between">
            <div class="text-sm text-gray-700">
                Showing 1 to 10 of 847 results
            </div>
            <div class="flex space-x-2">
                <button class="px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50">
                    Previous
                </button>
                <button class="px-3 py-2 bg-red-600 text-white rounded-lg text-sm font-medium">1</button>
                <button class="px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50">2</button>
                <button class="px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50">3</button>
                <button class="px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50">
                    Next
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<ContentItem> contentItems = new()
    {
        new ContentItem { Id = "1", Title = "Advanced Physics Notes", Author = "Dr. Smith", Type = "notes", Status = "pending", UploadDate = "2024-01-20", Views = 1234, Rating = 4.8, Description = "Comprehensive notes covering advanced physics concepts including quantum mechanics and relativity.", IsFlagged = false },
        new ContentItem { Id = "2", Title = "Chemistry Lab Video", Author = "Prof. Johnson", Type = "video", Status = "pending", UploadDate = "2024-01-19", Views = 0, Rating = 0, Description = "Step-by-step laboratory procedures for organic chemistry experiments.", IsFlagged = false },
        new ContentItem { Id = "3", Title = "Math PYQ 2024", Author = "Admin", Type = "pyq", Status = "approved", UploadDate = "2024-01-18", Views = 856, Rating = 4.6, Description = "Previous year question papers for mathematics with detailed solutions.", IsFlagged = false },
        new ContentItem { Id = "4", Title = "Inappropriate Content Report", Author = "User123", Type = "notes", Status = "flagged", UploadDate = "2024-01-17", Views = 45, Rating = 2.1, Description = "Study notes that may contain inappropriate content.", IsFlagged = true, FlagReason = "Inappropriate content" },
        new ContentItem { Id = "5", Title = "Database Systems Guide", Author = "Prof. Chen", Type = "notes", Status = "rejected", UploadDate = "2024-01-16", Views = 234, Rating = 3.5, Description = "Comprehensive guide to database management systems.", IsFlagged = false }
    };

    private string GetContentTypeColor(string type)
    {
        return type switch
        {
            "notes" => "bg-blue-100 text-blue-600",
            "video" => "bg-red-100 text-red-600",
            "pyq" => "bg-green-100 text-green-600",
            _ => "bg-gray-100 text-gray-600"
        };
    }

    private string GetStatusColor(string status)
    {
        return status switch
        {
            "approved" => "text-green-600 bg-green-100",
            "pending" => "text-yellow-600 bg-yellow-100",
            "rejected" => "text-red-600 bg-red-100",
            "flagged" => "text-orange-600 bg-orange-100",
            _ => "text-gray-600 bg-gray-100"
        };
    }


    public class ContentItem
    {
        public string Id { get; set; } = "";
        public string Title { get; set; } = "";
        public string Author { get; set; } = "";
        public string Type { get; set; } = "";
        public string Status { get; set; } = "";
        public string UploadDate { get; set; } = "";
        public int Views { get; set; }
        public double Rating { get; set; }
        public string Description { get; set; } = "";
        public bool IsFlagged { get; set; }
        public string FlagReason { get; set; } = "";
    }
}