@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.JSInterop
@implements IAsyncDisposable

@using System.Security.Claims

<header class="fixed w-full z-50 transition-all duration-300" style="@GetHeaderStyle() ">
    <div class="container mx-auto px-4">
        <div class="flex justify-between items-center">
            <!-- Logo -->
            <a href="/" class="flex items-center gap-2 text-primary-300 font-bold text-xl">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
                </svg>
                <span>EduNotes</span>
            </a>

            <!-- Desktop Navigation -->
            <nav class="hidden md:flex items-center space-x-8">
                <NavLink href="/" Match="NavLinkMatch.All" class="nav-link dark:text-white">Home</NavLink>
                <NavLink href="/pyqs" class="nav-link dark:text-white">PYQs</NavLink>
                <NavLink href="/notes" class="nav-link dark:text-white">Notes</NavLink>
                <NavLink href="/videos" class="nav-link dark:text-white">Videos</NavLink>
                <NavLink href="/contact" class="nav-link dark:text-white">Contact</NavLink>
                <AuthorizeView Roles="SuperAdmin">
                    <Authorized>
                        <NavLink href="/admin/dashboard" class="flex items-center gap-2 nav-link dark:text-white">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z" />
                            </svg>
                            <span>Dashboard</span>
                        </NavLink>
                    </Authorized>
                </AuthorizeView>
                <AuthorizeView Roles="Teacher">
                    <Authorized>
                        <NavLink href="/teacher/dashboard" class="flex items-center gap-2 nav-link dark:text-white">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z" />
                            </svg>
                            <span>Dashboard</span>
                        </NavLink>
                    </Authorized>
                </AuthorizeView>
            </nav>

            <!-- Auth/User Buttons -->
            <div class="hidden md:flex items-center gap-4">
                <!-- Theme Toggle Button -->
                <button class="p-2 text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800"
                        @onclick="ToggleTheme"
                        title="@(isDarkMode ? "Switch to light mode" : "Switch to dark mode")">
                    @if (isDarkMode)
                    {
                        <!-- Sun icon for light mode -->
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
                        </svg>
                    }
                    else
                    {
                        <!-- Moon icon for dark mode -->
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
                        </svg>
                    }
                </button>

                @if (!isAuthenticated)
                {
                    <a href="/login" class="flex items-center gap-2 text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
                        </svg>
                        <span>Sign In</span>
                    </a>
                    <a href="/register" class="flex items-center gap-2 bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg transition-colors">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                        <span>Get Started</span>
                    </a>
                }
                else
                {
                    <div class="relative" @ref="dropdownContainer">
                        <button class="flex items-center gap-3 text-gray-700 hover:text-primary-600 transition-colors focus:outline-none p-1.5 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800" 
                                @onclick="ToggleUserDropdown">
                            <!-- Profile Image Container -->
                            <div class="w-8 h-8 rounded-full overflow-hidden ring-2 ring-primary-200 dark:ring-primary-800 flex-shrink-0">
                                @if (string.IsNullOrEmpty(UserProfileUrl))
                                {
                                    <div class="w-full h-full bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-400 flex items-center justify-center text-sm font-medium">
                                        @(userName?.Substring(0, 1).ToUpper())
                                    </div>
                                }
                                else if (IsProfileImageExists())
                                {
                                    <img src="@UserProfileUrl" 
                                         alt="@userName" 
                                         class="w-full h-full object-cover"
                                         onerror="this.onerror=null; this.src='images/default-avatar.png';" />
                                }
                            </div>
                            <!-- User Info -->
                            <span class="font-medium dark:text-white">@userName</span>
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>

                        @if (showUserDropdown)
                        {
                            <div class="absolute right-0 mt-2 w-56 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50">
                                <!-- User Info Header -->
                                <div class="p-4 border-b border-gray-100 dark:border-gray-700 flex items-center gap-3">
                                    <!-- Profile Image in Dropdown -->
                                    <div class="w-10 h-10 rounded-full overflow-hidden ring-2 ring-primary-200 dark:ring-primary-800 flex-shrink-0">
                                        @if (string.IsNullOrEmpty(UserProfileUrl))
                                        {
                                            <div class="w-full h-full bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-400 flex items-center justify-center text-sm font-medium">
                                                @(userName?.Substring(0, 1).ToUpper())
                                            </div>
                                        }
                                        else
                                        {
                                            <img src="@UserProfileUrl" 
                                                 alt="@userName" 
                                                 class="w-full h-full object-cover"
                                                 onerror="this.onerror=null; this.src='images/default-avatar.png';" />
                                        }
                                    </div>
                                    <div class="flex-1 min-w-0">
                                        <div class="font-semibold text-gray-900 dark:text-white truncate">@userName</div>
                                        <div class="text-xs text-gray-500 dark:text-gray-400 truncate">@userEmail</div>
                                    </div>
                                </div>
                                <!-- Menu Items -->
                                <div class="py-1">
                                    <NavLink href="/profile" 
                                            class="flex items-center gap-2 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-primary-600 dark:hover:text-primary-400 transition-colors"
                                            @onclick="() => { showUserDropdown = false; }">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                        </svg>
                                        <span>Profile</span>
                                    </NavLink>
                                    <button class="w-full flex items-center gap-2 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-primary-600 dark:hover:text-primary-400 transition-colors" 
                                            @onclick="async () => { showUserDropdown = false; await Task.Delay(100); Logout(); }">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                                        </svg>
                                        <span>Logout</span>
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>

            <!-- Mobile Menu Button -->
            <button class="md:hidden text-gray-600 dark:text-white text-primary-200" @onclick="ToggleMenu" aria-label="Toggle menu" aria-expanded="@isMenuOpen" aria-controls="mobile-menu">
                @if (isMenuOpen)
                {
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                }
                else
                {
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                }
            </button>
        </div>

        <!-- Mobile Menu -->
        @if (isMenuOpen)
        {
            <div class="fixed inset-0 bg-black/40 md:hidden " @onclick="ToggleMenu"></div>
            <div id="mobile-menu" class="md:hidden bg-white dark:bg-gray-800 mt-4 p-4 rounded-lg shadow-lg relative z-50 max-h-[70vh] overflow-y-auto border border-gray-200 dark:border-gray-700">
                <nav class="flex flex-col space-y-4">
                    <NavLink href="/" Match="NavLinkMatch.All" class="nav-link dark:text-white">Home</NavLink>
                    <NavLink href="/pyqs" class="nav-link dark:text-white">PYQs</NavLink>
                    <NavLink href="/notes" class="nav-link dark:text-white">Notes</NavLink>
                    <NavLink href="/videos" class="nav-link dark:text-white">Videos</NavLink>
                    <NavLink href="/contact" class="nav-link dark:text-white">Contact</NavLink>
                    <div class="pt-4 border-t border-gray-200 dark:border-gray-700 space-y-3">
                        <!-- Theme Toggle for Mobile -->
                        <button class="flex items-center gap-2 w-full text-left px-4 py-2 text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors rounded-lg" @onclick="ToggleTheme">
                            @if (isDarkMode)
                            {
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
                                </svg>
                                <span>Light Mode</span>
                            }
                            else
                            {
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
                                </svg>
                                <span>Dark Mode</span>
                            }
                        </button>

                        @if (!isAuthenticated)
                        {
                            <a href="/login" class="flex items-center gap-2 text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
                                </svg>
                                Sign In
                            </a>
                            <a href="/register" class="flex items-center gap-2 bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg transition-colors w-fit">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                                Get Started
                            </a>
                        }
                        else
                        {
                            <div class="border-b border-gray-100 dark:border-gray-700 px-4 py-2">
                                <div class="font-semibold text-gray-900 dark:text-white">@userName</div>
                                <div class="text-xs text-gray-500 dark:text-gray-400 truncate">@userEmail</div>
                            </div>
                            <a href="/profile" class="block px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-primary-600 dark:hover:text-primary-400 transition-colors rounded-lg">Profile</a>
                            <button class="w-full text-left px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-primary-600 dark:hover:text-primary-400 transition-colors rounded-lg" @onclick="Logout">Logout</button>
                        }
                    </div>
                </nav>
            </div>
        }
    </div>
</header>
