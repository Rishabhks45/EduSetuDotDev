@using System.ComponentModel.DataAnnotations
@using EduSetu.Components.Shared

<div class="group bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-lg transition-all duration-300 hover:border-primary-200">
    <!-- Thumbnail -->
    <div class="relative h-48 overflow-hidden">
        <img src="@Note.Thumbnail" alt="@Note.Title"
             class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300" />
        <div class="absolute inset-0 bg-gradient-to-t from-black/40 to-transparent"></div>
        
        <!-- Badges -->
        <div class="absolute top-3 left-3 flex gap-2">
            @if (Note.IsPremium)
            {
                <span class="bg-yellow-500 text-white text-xs font-bold px-2 py-1 rounded-full flex items-center gap-1">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7"></path>
                    </svg>
                    PREMIUM
                </span>
            }
            @if (Note.IsVerified)
            {
                <span class="bg-green-500 text-white text-xs font-bold px-2 py-1 rounded-full flex items-center gap-1">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    VERIFIED
                </span>
            }
        </div>

        <!-- Category Badge -->
        <div class="@($"absolute top-3 right-3 px-2 py-1 rounded-full text-xs font-medium border {GetCategoryColor()}")">
            <div class="flex items-center gap-1">
                @GetCategoryIcon()
                <span class="capitalize">@Note.Category</span>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="absolute bottom-3 right-3 flex gap-2 opacity-0 group-hover:opacity-100 transition-opacity">
            <button @onclick="HandleBookmark"
                    class="@($"p-2 rounded-full backdrop-blur-sm transition-colors {(isBookmarked ? "bg-yellow-500 text-white" : "bg-white/90 text-gray-700 hover:bg-white")}")">
                <svg class="w-4 h-4 @(isBookmarked ? "fill-current" : "")" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
                </svg>
            </button>
            <button @onclick="HandleShare"
                    class="p-2 bg-white/90 hover:bg-white text-gray-700 rounded-full backdrop-blur-sm transition-colors">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
                </svg>
            </button>
        </div>
    </div>
    
    <div class="p-6">
        <!-- Header -->
        <div class="flex justify-between items-start mb-3">
            <div class="flex items-center gap-3 text-sm text-gray-500">
                <span class="flex items-center gap-1">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                    </svg>
                    @Note.DownloadCount.ToString("N0")
                </span>
                <span class="flex items-center gap-1">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                    @Note.ViewCount.ToString("N0")
                </span>
            </div>
            
            <div class="flex items-center gap-1">
                <svg class="w-3 h-3 text-yellow-400 fill-current" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                </svg>
                <span class="text-sm font-medium text-gray-700">@Note.Rating.ToString("F1")</span>
                <span class="text-xs text-gray-500">(@Note.TotalRatings)</span>
            </div>
        </div>

        <!-- Title and Description -->
        <h3 class="text-lg font-semibold text-gray-800 mb-2 line-clamp-2">
            @Note.Title
        </h3>
        <p class="text-sm text-gray-600 mb-4 line-clamp-3">
            @Note.Description
        </p>

        <!-- Meta Information -->
        <div class="space-y-3 mb-4">
            <!-- Author and Date -->
            <div class="flex items-center justify-between text-sm text-gray-500">
                <div class="flex items-center gap-1">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                    <span>@Note.Author</span>
                </div>
                <div class="flex items-center gap-1">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                    </svg>
                    <span>@FormatDate(Note.UploadDate)</span>
                </div>
            </div>

            <!-- File Info -->
            <div class="flex items-center justify-between text-sm text-gray-500">
                <div class="flex items-center gap-1">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                    <span>@Note.FileSize</span>
                </div>
                <div class="flex items-center gap-1">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                    </svg>
                    <span>@Note.Pages pages</span>
                </div>
            </div>

            <!-- Tags -->
            @if (Note.Tags.Any())
            {
                <div class="flex flex-wrap gap-1">
                    @foreach (var tag in Note.Tags.Take(3))
                    {
                        <span class="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full">
                            @tag
                        </span>
                    }
                    @if (Note.Tags.Count > 3)
                    {
                        <span class="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full">
                            +@(Note.Tags.Count - 3)
                        </span>
                    }
                </div>
            }
        </div>

        <!-- Action Buttons -->
        <div class="flex gap-2">
            <button @onclick="() => OnView.InvokeAsync(Note)"
                    class="flex-1 flex items-center justify-center gap-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors font-medium">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                </svg>
                <span>View</span>
            </button>
            <button @onclick="() => OnDownload.InvokeAsync(Note)"
                    class="flex items-center justify-center gap-2 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                </svg>
                <span>Download</span>
            </button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Note Note { get; set; } = new();

    [Parameter]
    public EventCallback<Note> OnView { get; set; }

    [Parameter]
    public EventCallback<Note> OnDownload { get; set; }

    private bool isBookmarked = false;

    private RenderFragment GetCategoryIcon()
    {
        return Note.Category switch
        {
            "board" => @<svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
            </svg>,
            "university" => @<svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
            </svg>,
            "exam" => @<svg class="w-4 h-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
            </svg>,
            "state" => @<svg class="w-4 h-4 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
            </svg>,
            _ => @<svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
        };
    }

    private string GetCategoryColor()
    {
        return Note.Category switch
        {
            "board" => "bg-blue-50 text-blue-700 border-blue-200",
            "university" => "bg-green-50 text-green-700 border-green-200",
            "exam" => "bg-purple-50 text-purple-700 border-purple-200",
            "state" => "bg-orange-50 text-orange-700 border-orange-200",
            _ => "bg-gray-50 text-gray-700 border-gray-200"
        };
    }

    private string FormatDate(string dateString)
    {
        if (DateTime.TryParse(dateString, out var date))
        {
            var now = DateTime.Now;
            var diffTime = Math.Abs((now - date).TotalDays);
            var diffDays = (int)Math.Ceiling(diffTime);
            
            if (diffDays == 1) return "1 day ago";
            if (diffDays < 7) return $"{diffDays} days ago";
            if (diffDays < 30) return $"{Math.Ceiling(diffDays / 7.0)} weeks ago";
            return date.ToShortDateString();
        }
        return dateString;
    }

    private void HandleBookmark()
    {
        isBookmarked = !isBookmarked;
    }

    private void HandleShare()
    {
        // In a real app, this would implement sharing functionality
        Console.WriteLine($"Sharing note: {Note.Id}");
    }
} 