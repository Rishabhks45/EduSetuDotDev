@using EduSetu.Components.Shared

<div class="bg-white rounded-xl shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow">
    <div class="flex gap-4">
        <!-- Thumbnail -->
        <div class="relative flex-shrink-0">
            <img src="@Video.Thumbnail" alt="@Video.Title" class="w-32 h-20 object-cover rounded-lg" />
            <div class="absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center opacity-0 hover:opacity-100 transition-opacity rounded-lg">
                <button @onclick="() => OnView.InvokeAsync(Video)" 
                        class="bg-white bg-opacity-90 p-2 rounded-full hover:bg-opacity-100 transition-all">
                    <svg class="w-4 h-4 text-gray-800" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M8 5v14l11-7z"/>
                    </svg>
                </button>
            </div>
            <div class="absolute top-1 right-1 bg-black bg-opacity-75 text-white text-xs px-1 py-0.5 rounded text-xs">
                @Video.Duration
            </div>
            @if (Video.IsPremium)
            {
                <div class="absolute top-1 left-1 bg-yellow-500 text-white text-xs px-1 py-0.5 rounded text-xs">
                    Premium
                </div>
            }
        </div>

        <!-- Content -->
        <div class="flex-1 min-w-0">
            <div class="flex items-start justify-between mb-2">
                <h3 class="font-semibold text-gray-800 line-clamp-1">@Video.Title</h3>
                @if (Video.IsVerified)
                {
                    <svg class="w-4 h-4 text-green-500 flex-shrink-0 ml-2" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                }
            </div>

            <p class="text-gray-600 text-sm mb-2 line-clamp-2">@Video.Description</p>

            <div class="flex items-center gap-4 text-sm text-gray-500 mb-2">
                <span>@Video.Instructor</span>
                <span>•</span>
                <span>@Video.Level</span>
                <span>•</span>
                <span>@Video.Quality</span>
            </div>

            <div class="flex items-center justify-between">
                <div class="flex items-center gap-4">
                    <div class="flex items-center gap-1">
                        <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                        </svg>
                        <span class="font-medium text-gray-700">@Video.Rating.ToString("F1")</span>
                        <span class="text-gray-500">(@Video.TotalRatings)</span>
                    </div>
                    <span class="text-gray-400">•</span>
                    <span class="text-gray-500">@Video.Views views</span>
                </div>

                <div class="flex items-center gap-2">
                    <button @onclick="() => OnView.InvokeAsync(Video)" 
                            class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg font-medium text-sm transition-colors">
                        Watch
                    </button>
                    <button @onclick="() => OnDownload.InvokeAsync(Video)" 
                            class="text-gray-500 hover:text-gray-700 p-2">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Video Video { get; set; } = new();

    [Parameter]
    public EventCallback<Video> OnView { get; set; }

    [Parameter]
    public EventCallback<Video> OnDownload { get; set; }
} 