@using System.ComponentModel.DataAnnotations
@using EduSetu.Components.Shared

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 hover:shadow-md transition-all duration-200 hover:border-primary-200 dark:hover:border-primary-600">
    <div class="flex items-start gap-4">
        <div class="relative w-24 h-24 flex-shrink-0">
            <img src="@Note.Thumbnail" alt="@Note.Title"
                 class="w-full h-full object-cover rounded-lg" />
            @if (Note.IsPremium)
            {
                <div class="absolute top-1 left-1">
                    <span class="bg-yellow-500 text-white text-xs font-bold px-1 py-0.5 rounded-full">
                        PREMIUM
                    </span>
                </div>
            }
            @if (Note.IsVerified)
            {
                <div class="absolute top-1 right-1">
                    <span class="bg-green-500 text-white text-xs font-bold px-1 py-0.5 rounded-full">
                        âœ“
                    </span>
                </div>
            }
        </div>

        <div class="flex-1 min-w-0">
            <div class="flex items-start justify-between mb-2">
                <div class="flex-1 min-w-0">
                    <div class="flex items-center gap-2 mb-1">
                        <span class="@($"text-xs font-medium px-2 py-1 rounded capitalize {GetCategoryColor()}")">
                            @Note.Category
                        </span>
                        @if (!string.IsNullOrEmpty(GetCategoryInfo()))
                        {
                            <span class="text-xs text-gray-500 dark:text-gray-400">@GetCategoryInfo()</span>
                        }
                    </div>
                    <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-1 line-clamp-2">
                        @Note.Title
                    </h3>
                    <p class="text-sm text-gray-600 dark:text-gray-400 line-clamp-2">
                        @Note.Description
                    </p>
                </div>
            </div>

            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4 text-sm text-gray-500 dark:text-gray-400">
                <div class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                    <span>@Note.Author</span>
                </div>
                <div class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                    </svg>
                    <span>@FormatDate(Note.UploadDate)</span>
                </div>
                <div class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                    </svg>
                    <span>@Note.DownloadCount.ToString("N0")</span>
                </div>
                <div class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                    <span>@Note.ViewCount.ToString("N0")</span>
                </div>
            </div>

            <div class="flex items-center justify-between">
                <div class="flex items-center gap-2">
                    @if (Note.Tags.Any())
                    {
                        <div class="flex flex-wrap gap-1">
                            @foreach (var tag in Note.Tags.Take(3))
                            {
                                <span class="px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-full">
                                    @tag
                                </span>
                            }
                            @if (Note.Tags.Count > 3)
                            {
                                <span class="px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-full">
                                    +@(Note.Tags.Count - 3)
                                </span>
                            }
                        </div>
                    }
                </div>

                <div class="flex items-center gap-4">
                    <div class="flex items-center gap-1">
                        <svg class="w-4 h-4 text-yellow-400 fill-current" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                        </svg>
                        <span class="text-sm font-medium text-gray-700 dark:text-gray-300">@Note.Rating.ToString("F1")</span>
                        <span class="text-xs text-gray-500 dark:text-gray-400">(@Note.TotalRatings)</span>
                    </div>

                    <div class="flex items-center gap-1 text-sm text-gray-500 dark:text-gray-400">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                        <span>@Note.FileSize</span>
                    </div>

                    <div class="flex items-center gap-2">
                        <button @onclick="() => OnView.InvokeAsync(Note)"
                                class="flex items-center gap-2 px-3 py-2 bg-primary-600 dark:bg-primary-700 text-white rounded-lg hover:bg-primary-700 dark:hover:bg-primary-600 transition-colors text-sm font-medium">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                            <span>View</span>
                        </button>
                        <button @onclick="() => OnDownload.InvokeAsync(Note)"
                                class="flex items-center gap-2 px-3 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-sm font-medium">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                            </svg>
                            <span>Download</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Note Note { get; set; } = new();

    [Parameter]
    public EventCallback<Note> OnView { get; set; }

    [Parameter]
    public EventCallback<Note> OnDownload { get; set; }

    private string GetCategoryColor()
    {
        return Note.Category switch
        {
            "board" => "bg-blue-50 dark:bg-blue-900 text-blue-700 dark:text-blue-300 border-blue-200 dark:border-blue-800",
            "university" => "bg-green-50 dark:bg-green-900 text-green-700 dark:text-green-300 border-green-200 dark:border-green-800",
            "exam" => "bg-purple-50 dark:bg-purple-900 text-purple-700 dark:text-purple-300 border-purple-200 dark:border-purple-800",
            "state" => "bg-orange-50 dark:bg-orange-900 text-orange-700 dark:text-orange-300 border-orange-200 dark:border-orange-800",
            _ => "bg-gray-50 dark:bg-gray-900 text-gray-700 dark:text-gray-300 border-gray-200 dark:border-gray-700"
        };
    }

    private string GetCategoryInfo()
    {
        return Note.Category switch
        {
            "board" => Note.Board,
            "university" => Note.University,
            "exam" => Note.Exam,
            "state" => Note.State,
            _ => ""
        };
    }

    private string FormatDate(string dateString)
    {
        if (DateTime.TryParse(dateString, out var date))
        {
            var now = DateTime.Now;
            var diffTime = Math.Abs((now - date).TotalDays);
            var diffDays = (int)Math.Ceiling(diffTime);
            
            if (diffDays == 1) return "1 day ago";
            if (diffDays < 7) return $"{diffDays} days ago";
            if (diffDays < 30) return $"{Math.Ceiling(diffDays / 7.0)} weeks ago";
            return date.ToShortDateString();
        }
        return dateString;
    }
}